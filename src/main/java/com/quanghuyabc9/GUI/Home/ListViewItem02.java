/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.quanghuyabc9.GUI.Home;

import com.quanghuyabc9.BUS.ConferenceBUS;
import com.quanghuyabc9.BUS.RegisteredConferenceBUS;
import com.quanghuyabc9.BUS.RegisteringConferenceBUS;
import com.quanghuyabc9.DTO.Conference;
import com.quanghuyabc9.GUI.Confirm;
import com.quanghuyabc9.GUI.Guess;
import com.quanghuyabc9.manager.MyApplication;
import java.awt.Color;
import java.sql.Timestamp;
import javax.swing.JFrame;
import javax.swing.SwingUtilities;

/**
 *
 * @author quanghuyabc9
 */
public class ListViewItem02 extends javax.swing.JPanel {

    private Conference conference;
    private boolean removeable;

    public static final Color MOUSE_MOVED_PNL_COLOR = new Color(129, 131, 185);
    public static final Color MOUSE_EXITED_PNL_COLOR = new Color(255, 255, 255);
    public static final Color MOUSE_MOVED_PNL_COLOR_2 = new Color(237, 235, 233);

    public static final String CONFIRM_MSG = "Do you want to exit this conference";

    public ListViewItem02(Conference _conference) {
        initComponents();
        conference = _conference;
        if (conference.getTimeStart().before(new Timestamp(System.currentTimeMillis()))) {
            removeable = false;
        } else {
            removeable = true;
        }
        setData();
    }

    public final void setData() {
        if (conference != null) {
            String name = conference.getNameConference();
            String time = conference.getTimeStart().toString();
            String duration = conference.getDuration().toString();
            int nPeople = RegisteredConferenceBUS.getRegisterdConferencesOfConference(conference).size()
                    + RegisteringConferenceBUS.getRegisteringConferencesOfConference(conference).size();
            String location = conference.getLocation().toString();
            lblNameDataRow.setText(name);
            lblTimeDataRow.setText(time);
            lblDurationDataRow.setText(duration);
            lblPeopleDataRow.setText(String.valueOf(nPeople));
            lblLocationDataRow.setText(location);
            if (!removeable) {
                lblExitRow.setIcon(null);
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        pnlDataRow = new javax.swing.JPanel();
        lblNameDataRow = new javax.swing.JLabel();
        lblTimeDataRow = new javax.swing.JLabel();
        lblDurationDataRow = new javax.swing.JLabel();
        lblPeopleDataRow = new javax.swing.JLabel();
        lblLocationDataRow = new javax.swing.JLabel();
        pnlExitRow = new javax.swing.JPanel();
        lblExitRow = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));
        setMinimumSize(new java.awt.Dimension(0, 0));
        setPreferredSize(new java.awt.Dimension(621, 50));
        setLayout(new java.awt.GridBagLayout());

        pnlDataRow.setBackground(new java.awt.Color(255, 255, 255));
        pnlDataRow.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 25, 0, 0));
        pnlDataRow.setPreferredSize(new java.awt.Dimension(0, 0));
        pnlDataRow.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                pnlDataRowMouseMoved(evt);
            }
        });
        pnlDataRow.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseExited(java.awt.event.MouseEvent evt) {
                pnlDataRowMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                pnlDataRowMousePressed(evt);
            }
        });
        pnlDataRow.setLayout(new java.awt.GridBagLayout());

        lblNameDataRow.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        lblNameDataRow.setForeground(new java.awt.Color(51, 51, 51));
        lblNameDataRow.setText("Name");
        lblNameDataRow.setPreferredSize(new java.awt.Dimension(0, 0));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.6;
        gridBagConstraints.weighty = 1.0;
        pnlDataRow.add(lblNameDataRow, gridBagConstraints);

        lblTimeDataRow.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        lblTimeDataRow.setForeground(new java.awt.Color(51, 51, 51));
        lblTimeDataRow.setText("Time");
        lblTimeDataRow.setPreferredSize(new java.awt.Dimension(0, 0));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.4;
        gridBagConstraints.weighty = 1.0;
        pnlDataRow.add(lblTimeDataRow, gridBagConstraints);

        lblDurationDataRow.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        lblDurationDataRow.setForeground(new java.awt.Color(51, 51, 51));
        lblDurationDataRow.setText("Duration");
        lblDurationDataRow.setPreferredSize(new java.awt.Dimension(0, 0));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.2;
        gridBagConstraints.weighty = 1.0;
        pnlDataRow.add(lblDurationDataRow, gridBagConstraints);

        lblPeopleDataRow.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        lblPeopleDataRow.setForeground(new java.awt.Color(51, 51, 51));
        lblPeopleDataRow.setText("People");
        lblPeopleDataRow.setPreferredSize(new java.awt.Dimension(0, 0));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.15;
        gridBagConstraints.weighty = 1.0;
        pnlDataRow.add(lblPeopleDataRow, gridBagConstraints);

        lblLocationDataRow.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        lblLocationDataRow.setForeground(new java.awt.Color(51, 51, 51));
        lblLocationDataRow.setText("Location");
        lblLocationDataRow.setPreferredSize(new java.awt.Dimension(0, 0));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.8;
        gridBagConstraints.weighty = 1.0;
        pnlDataRow.add(lblLocationDataRow, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        add(pnlDataRow, gridBagConstraints);

        pnlExitRow.setBackground(new java.awt.Color(255, 255, 255));
        pnlExitRow.setPreferredSize(new java.awt.Dimension(0, 0));
        pnlExitRow.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                pnlExitRowMouseMoved(evt);
            }
        });
        pnlExitRow.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseExited(java.awt.event.MouseEvent evt) {
                pnlExitRowMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                pnlExitRowMousePressed(evt);
            }
        });
        pnlExitRow.setLayout(new java.awt.BorderLayout());

        lblExitRow.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblExitRow.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/quanghuyabc9/images/icons8-exit-24.png"))); // NOI18N
        pnlExitRow.add(lblExitRow, java.awt.BorderLayout.CENTER);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.05;
        gridBagConstraints.weighty = 1.0;
        add(pnlExitRow, gridBagConstraints);
    }// </editor-fold>//GEN-END:initComponents

    private void pnlExitRowMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnlExitRowMouseMoved
        // TODO add your handling code here:
        if (removeable) {
            pnlExitRow.setBackground(MOUSE_MOVED_PNL_COLOR_2);
        }

    }//GEN-LAST:event_pnlExitRowMouseMoved

    private void pnlExitRowMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnlExitRowMousePressed
        // TODO add your handling code here:
        if (removeable) {
            Confirm confirmDialog = new Confirm(new JFrame(), true, CONFIRM_MSG);
            boolean delete = confirmDialog.showDialog();
            if (delete) {
                RegisteredConferenceBUS.deleteRegisteredConference(MyApplication.getPersonSignIn(), conference);
                Guess root = (Guess) SwingUtilities.getWindowAncestor(this);
                root.updateAdminUi();
            }
        }
    }//GEN-LAST:event_pnlExitRowMousePressed

    private void pnlExitRowMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnlExitRowMouseExited
        // TODO add your handling code here:
        if (removeable)
            pnlExitRow.setBackground(MOUSE_EXITED_PNL_COLOR);
    }//GEN-LAST:event_pnlExitRowMouseExited

    private void pnlDataRowMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnlDataRowMouseExited
        // TODO add your handling code here:
        pnlDataRow.setBackground(MOUSE_EXITED_PNL_COLOR);
    }//GEN-LAST:event_pnlDataRowMouseExited

    private void pnlDataRowMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnlDataRowMouseMoved
        // TODO add your handling code here:
        pnlDataRow.setBackground(MOUSE_MOVED_PNL_COLOR);
    }//GEN-LAST:event_pnlDataRowMouseMoved

    private void pnlDataRowMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnlDataRowMousePressed
        // TODO add your handling code here:
        Guess root = (Guess) SwingUtilities.getWindowAncestor(this);
        root.showPnlDetailConferenceMain(conference);
    }//GEN-LAST:event_pnlDataRowMousePressed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel lblDurationDataRow;
    private javax.swing.JLabel lblExitRow;
    private javax.swing.JLabel lblLocationDataRow;
    private javax.swing.JLabel lblNameDataRow;
    private javax.swing.JLabel lblPeopleDataRow;
    private javax.swing.JLabel lblTimeDataRow;
    private javax.swing.JPanel pnlDataRow;
    private javax.swing.JPanel pnlExitRow;
    // End of variables declaration//GEN-END:variables
}
