/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.quanghuyabc9.GUI;

import com.quanghuyabc9.BUS.ConferenceBUS;
import com.quanghuyabc9.BUS.PersonBUS;
import com.quanghuyabc9.BUS.RegisteredConferenceBUS;
import com.quanghuyabc9.BUS.RegisteringConferenceBUS;
import com.quanghuyabc9.DTO.Conference;
import com.quanghuyabc9.DTO.Person;
import com.quanghuyabc9.DTO.RegisteredConference;
import com.quanghuyabc9.DTO.RegisteringConference;
import com.quanghuyabc9.GUI.Home.CardViewItem;
import com.quanghuyabc9.GUI.Home.ListViewItem01;
import com.quanghuyabc9.GUI.Home.ListViewItem02;
import com.quanghuyabc9.GUI.Home.ParticipantItem;
import com.quanghuyabc9.GUI.Management.ConferenceItem;
import com.quanghuyabc9.GUI.Management._ConferenceItem;
import com.quanghuyabc9.GUI.Management.ManageConference;
import com.quanghuyabc9.GUI.Management.PersonItem;
import com.quanghuyabc9.GUI.Management._PersonItem;
import com.quanghuyabc9.manager.MyApplication;
import java.awt.CardLayout;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.FlowLayout;
import java.awt.GridBagConstraints;
import java.awt.Image;
import java.awt.Panel;
import java.awt.Toolkit;
import java.awt.image.BufferedImage;
import java.io.File;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Comparator;
import java.util.Date;
import java.util.List;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JComboBox;
import javax.swing.JFrame;
import javax.swing.JPanel;
import javax.swing.border.EmptyBorder;

/**
 *
 * @author quanghuyabc9
 */
public class Guess extends javax.swing.JFrame {

    public static final String ENROLL_SUCCESSFULLY_MSG = "Enroll successfully. Admin will accept you soon !";
    public static final String ENROLL_SUCCESSFULLY_MSG_1 = "You currently enrolled this conference";
    public static final String ENROLL_SUCCESSFULLY_MSG_2 = "You currently enrolling this conference";
    public static final String ENROLLING_CONFERENCE = "Enrolling";
    public static final String ENROLLED_CONFERENCE = "Enrolled";

    public static final Color MOUSE_MOVED_BTN_COLOR = new Color(61, 62, 103);
    public static final Color MOUSE_EXITED_BTN_COLOR = new Color(70, 71, 117);
    public static final Color MOUSE_EXITED_PNL_COLOR_3 = new Color(255, 255, 255);
    public static final Color MOUSE_MOVED_PNL_COLOR = new Color(237, 235, 233);
    public static final Color MOUSE_EXITED_PNL_COLOR = new Color(243, 242, 241);
    public static final Color MOUSE_PRESSED_PNL_COLOR_2 = new Color(63, 65, 100);
    public static final Color MOUSE_EXITED_PNL_COLOR_2 = new Color(48, 49, 70);

    public static final int USER_TYPE = 0;
    public static final int ADMIN_TYPE = 1;

    /**
     * Creates new form Guess
     */
    public Guess() {
        initComponents();
        alignAllCloumnName();
        pnlHomeSideMousePressed(null);
        guessMode();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        btnSortBy = new javax.swing.ButtonGroup();
        btnFilterBy = new javax.swing.ButtonGroup();
        pnlTop = new javax.swing.JPanel();
        lblTitleTop = new javax.swing.JLabel();
        pnlSigninOrUserTop = new javax.swing.JPanel();
        lblSigninOrUserTop = new javax.swing.JLabel();
        pnlSide = new javax.swing.JPanel();
        pnlHomeSide = new javax.swing.JPanel();
        lblHomeSide = new javax.swing.JLabel();
        pnlYourConferencesSide = new javax.swing.JPanel();
        lblYourConferencesSide = new javax.swing.JLabel();
        pnlManagementSide = new javax.swing.JPanel();
        lblManagementSide = new javax.swing.JLabel();
        pnlUsersSide = new javax.swing.JPanel();
        lblUsersSide = new javax.swing.JLabel();
        pnlEmptySide = new javax.swing.JPanel();
        pnlMain = new javax.swing.JPanel();
        pnlHomeMain = new javax.swing.JPanel();
        pnlIntroHomeMain = new javax.swing.JPanel();
        txtIntroHomeMain = new javax.swing.JTextArea();
        pnlTitleHomeMain = new javax.swing.JPanel();
        lblAvailableConferencesTitleHomeMain = new javax.swing.JLabel();
        pnlListViewTitleHomeMain = new javax.swing.JPanel();
        lblListViewTitleHomeMain = new javax.swing.JLabel();
        pnlCardViewTitleHomeMain = new javax.swing.JPanel();
        lblCardViewTitleHomeMain = new javax.swing.JLabel();
        pnlViewHomeMain = new javax.swing.JPanel();
        pnlListViewHomeMain = new javax.swing.JPanel();
        pnlColumnNameListViewHomeMain = new javax.swing.JPanel();
        lblName = new javax.swing.JLabel();
        lblTime = new javax.swing.JLabel();
        lblDuration = new javax.swing.JLabel();
        lblPeople = new javax.swing.JLabel();
        lblLocation = new javax.swing.JLabel();
        scrColumnValueListViewHomeMain = new javax.swing.JScrollPane();
        pnlColumnValueListViewHomeMain = new javax.swing.JPanel();
        pnlCardViewHomeMain = new javax.swing.JPanel();
        scrContentCardViewHomeMain = new javax.swing.JScrollPane();
        pnlContentCardViewHomeMain = new javax.swing.JPanel();
        pnlYourConferencesMain = new javax.swing.JPanel();
        pnlTopYourConferencesMain = new javax.swing.JPanel();
        lblTopYourConferencesMain = new javax.swing.JLabel();
        pnlListViewTopYourConferencesMain = new javax.swing.JPanel();
        lblListViewTopYourConferencesMain = new javax.swing.JLabel();
        pnlCardViewTopYourConferencesMain = new javax.swing.JPanel();
        lblCardViewTopYourConferencesMain = new javax.swing.JLabel();
        pnlSearchIconTopYourConferencesMain = new javax.swing.JPanel();
        lblSearcIconTopYourConferencesMain = new javax.swing.JLabel();
        txtSearchTopYourConferencesMain = new javax.swing.JTextField();
        cmbSearchByTopYourConferencesMain = new javax.swing.JComboBox<>();
        lblSortByTopYourConferencesMain = new javax.swing.JLabel();
        cmbSortByTopYourConferencesMain = new javax.swing.JComboBox<>();
        pnlDataYourConferencesMain = new javax.swing.JPanel();
        pnlListViewDataYourConferencesMain = new javax.swing.JPanel();
        pnlColumnNameListViewDataYourConferencesMain = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        scrColumnValueListViewDataYourConferencesMain = new javax.swing.JScrollPane();
        pnlColumnValueListViewDataYourConferencesMain = new javax.swing.JPanel();
        pnlCardViewDataYourConferencesMain = new javax.swing.JPanel();
        scrValueCardViewDataYourConferencesMain = new javax.swing.JScrollPane();
        pnlValueCardViewDataYourConferencesMain = new javax.swing.JPanel();
        pnlManagementMain = new javax.swing.JPanel();
        pnlTopManagementMain = new javax.swing.JPanel();
        lblManagementForAdminTopManagementMain = new javax.swing.JLabel();
        pnlCreateConferenceTopManagementMain = new javax.swing.JPanel();
        lblCreateConferenceTopManagementMain = new javax.swing.JLabel();
        pnlColumnNameManagementMain = new javax.swing.JPanel();
        pnlTextColumnNameManagementMain = new javax.swing.JPanel();
        lblIdTextColumnNameManagementMain = new javax.swing.JLabel();
        lblNameTextColumnNameManagementMain = new javax.swing.JLabel();
        lblLocationTextColumnNameManagementMain = new javax.swing.JLabel();
        lblTimeTextColumnNameManagementMain = new javax.swing.JLabel();
        lblEmptyColumnNameManagementMain = new javax.swing.JPanel();
        scrColumnValueManagementMain = new javax.swing.JScrollPane();
        pnlColumnValueManagementMain = new javax.swing.JPanel();
        pnlDetailConferenceMain = new javax.swing.JPanel();
        pnlTopDetailConferenceMain = new javax.swing.JPanel();
        lblDetailConferenceTopDetailConferenceMain = new javax.swing.JLabel();
        scrMainDetailConferenceMain = new javax.swing.JScrollPane();
        pnlMainDetailConferenceMain = new javax.swing.JPanel();
        pnlBasicInfoMainDetailConferenceMain = new javax.swing.JPanel();
        pnlImageBasicInfoMainDetailConferenceMain = new javax.swing.JPanel();
        lblImageDetailConference = new javax.swing.JLabel();
        lblBriefDateBasicInfoMainDetailConferenceMain = new javax.swing.JLabel();
        scrNameBasicInfoMainDetailConferenceMain = new javax.swing.JScrollPane();
        txtNameBasicInfoMainDetailConferenceMain = new javax.swing.JTextArea();
        pnlEnrollBasicInfoMainDetailConferenceMain = new javax.swing.JPanel();
        lblEnrollBasicInfoMainDetailConferenceMain = new javax.swing.JLabel();
        lblAnnouBasicInfoMainDetailConferenceMain = new javax.swing.JLabel();
        pnlDetailInfoMainDetailConferenceMain = new javax.swing.JPanel();
        pnlDesDetailInfoMainDetailConferenceMain = new javax.swing.JPanel();
        scrBriefDesDesDetailInfoMainDetailConferenceMain = new javax.swing.JScrollPane();
        txtBriefDesDesDetailInfoMainDetailConferenceMain = new javax.swing.JTextArea();
        lblAboutDesDetailInfoMainDetailConferenceMain = new javax.swing.JLabel();
        scrDetailDesDesDetailInfoMainDetailConferenceMain = new javax.swing.JScrollPane();
        txtDetailDesDesDetailInfoMainDetailConferenceMain = new javax.swing.JTextArea();
        lblListPeopleInfoDetailInfoMainDetailConferenceMain = new javax.swing.JLabel();
        scrListPeopleValueDesDetailInfoMainDetailConferenceMain = new javax.swing.JScrollPane();
        pnlListPeopleValueDesDetailInfoMainDetailConferenceMain = new javax.swing.JPanel();
        pnlInfoDetailInfoMainDetailConferenceMain = new javax.swing.JPanel();
        lblDateAndTimeInfoDetailInfoMainDetailConferenceMain = new javax.swing.JLabel();
        lblDateInfoDetailInfoMainDetailConferenceMain = new javax.swing.JLabel();
        lblTimeInfoDetailInfoMainDetailConferenceMain = new javax.swing.JLabel();
        lblDurationInfoDetailInfoMainDetailConferenceMain = new javax.swing.JLabel();
        lblLocationInfoDetailInfoMainDetailConferenceMain = new javax.swing.JLabel();
        lblNameLocationInfoDetailInfoMainDetailConferenceMain = new javax.swing.JLabel();
        scrAddressLocationInfoDetailInfoMainDetailConferenceMain = new javax.swing.JScrollPane();
        txtAddressLocationInfoDetailInfoMainDetailConferenceMain = new javax.swing.JTextArea();
        lblCapacityInfoDetailInfoMainDetailConferenceMain = new javax.swing.JLabel();
        lblCapacityValueInfoDetailInfoMainDetailConferenceMain = new javax.swing.JLabel();
        pnlUsersMain = new javax.swing.JPanel();
        pnlTopUsersMain = new javax.swing.JPanel();
        lblUsersManagementTopUsersMain = new javax.swing.JLabel();
        lblSortByTopUsersMain = new javax.swing.JLabel();
        lblFilterByTopUsersMain = new javax.swing.JLabel();
        cmbSortByTopUsersMain = new javax.swing.JComboBox<>();
        cmbFilterByTopUsersMain = new javax.swing.JComboBox<>();
        pnlColumnNameUsersMain = new javax.swing.JPanel();
        pnlRowHeaderColumnNameUsersMain = new javax.swing.JPanel();
        lblIdRowHeaderColumnNameUsersMain = new javax.swing.JLabel();
        lblFullnameRowHeaderColumnNameUsersMain = new javax.swing.JLabel();
        lblUsernameRowHeaderColumnNameUsersMain = new javax.swing.JLabel();
        lblEmailRowHeaderColumnNameUsersMain = new javax.swing.JLabel();
        pnlEmptyColumnNameUsersMain = new javax.swing.JPanel();
        scrColumnValueUsersMain = new javax.swing.JScrollPane();
        pnlColumnValueUsersMain = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Conferences Management");
        setMinimumSize(new java.awt.Dimension(1280, 720));
        setName("MainFrame"); // NOI18N

        pnlTop.setBackground(new java.awt.Color(70, 71, 117));

        lblTitleTop.setFont(new java.awt.Font("Gabriola", 1, 24)); // NOI18N
        lblTitleTop.setForeground(new java.awt.Color(255, 255, 255));
        lblTitleTop.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTitleTop.setText("Conferences Management");
        lblTitleTop.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);

        pnlSigninOrUserTop.setBackground(new java.awt.Color(70, 71, 117));
        pnlSigninOrUserTop.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 20, 0, 20));
        pnlSigninOrUserTop.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                pnlSigninOrUserTopMouseMoved(evt);
            }
        });
        pnlSigninOrUserTop.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseExited(java.awt.event.MouseEvent evt) {
                pnlSigninOrUserTopMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                pnlSigninOrUserTopMousePressed(evt);
            }
        });
        pnlSigninOrUserTop.setLayout(new java.awt.BorderLayout());

        lblSigninOrUserTop.setBackground(new java.awt.Color(70, 71, 117));
        lblSigninOrUserTop.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        lblSigninOrUserTop.setForeground(new java.awt.Color(255, 255, 255));
        lblSigninOrUserTop.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblSigninOrUserTop.setText("Sign in");
        pnlSigninOrUserTop.add(lblSigninOrUserTop, java.awt.BorderLayout.CENTER);

        javax.swing.GroupLayout pnlTopLayout = new javax.swing.GroupLayout(pnlTop);
        pnlTop.setLayout(pnlTopLayout);
        pnlTopLayout.setHorizontalGroup(
            pnlTopLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlTopLayout.createSequentialGroup()
                .addComponent(lblTitleTop, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 952, Short.MAX_VALUE)
                .addComponent(pnlSigninOrUserTop, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        pnlTopLayout.setVerticalGroup(
            pnlTopLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlSigninOrUserTop, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(lblTitleTop, javax.swing.GroupLayout.DEFAULT_SIZE, 56, Short.MAX_VALUE)
        );

        pnlSide.setBackground(new java.awt.Color(48, 49, 70));
        pnlSide.setPreferredSize(new java.awt.Dimension(164, 0));
        pnlSide.setLayout(new java.awt.GridBagLayout());

        pnlHomeSide.setBackground(new java.awt.Color(48, 49, 70));
        pnlHomeSide.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                pnlHomeSideMousePressed(evt);
            }
        });

        lblHomeSide.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        lblHomeSide.setForeground(new java.awt.Color(255, 255, 255));
        lblHomeSide.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblHomeSide.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/quanghuyabc9/images/icons8-home-24.png"))); // NOI18N
        lblHomeSide.setText("Home");

        javax.swing.GroupLayout pnlHomeSideLayout = new javax.swing.GroupLayout(pnlHomeSide);
        pnlHomeSide.setLayout(pnlHomeSideLayout);
        pnlHomeSideLayout.setHorizontalGroup(
            pnlHomeSideLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlHomeSideLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lblHomeSide, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        pnlHomeSideLayout.setVerticalGroup(
            pnlHomeSideLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lblHomeSide, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        pnlSide.add(pnlHomeSide, gridBagConstraints);

        pnlYourConferencesSide.setBackground(new java.awt.Color(48, 49, 70));
        pnlYourConferencesSide.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                pnlYourConferencesSideMousePressed(evt);
            }
        });

        lblYourConferencesSide.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        lblYourConferencesSide.setForeground(new java.awt.Color(255, 255, 255));
        lblYourConferencesSide.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblYourConferencesSide.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/quanghuyabc9/images/icons8-business-conference-female-speaker-24.png"))); // NOI18N
        lblYourConferencesSide.setText("Your Conferences");

        javax.swing.GroupLayout pnlYourConferencesSideLayout = new javax.swing.GroupLayout(pnlYourConferencesSide);
        pnlYourConferencesSide.setLayout(pnlYourConferencesSideLayout);
        pnlYourConferencesSideLayout.setHorizontalGroup(
            pnlYourConferencesSideLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlYourConferencesSideLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lblYourConferencesSide, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        pnlYourConferencesSideLayout.setVerticalGroup(
            pnlYourConferencesSideLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lblYourConferencesSide, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        pnlSide.add(pnlYourConferencesSide, gridBagConstraints);

        pnlManagementSide.setBackground(new java.awt.Color(48, 49, 70));
        pnlManagementSide.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                pnlManagementSideMousePressed(evt);
            }
        });

        lblManagementSide.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        lblManagementSide.setForeground(new java.awt.Color(255, 255, 255));
        lblManagementSide.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblManagementSide.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/quanghuyabc9/images/icons8-management-24.png"))); // NOI18N
        lblManagementSide.setText("Management");

        javax.swing.GroupLayout pnlManagementSideLayout = new javax.swing.GroupLayout(pnlManagementSide);
        pnlManagementSide.setLayout(pnlManagementSideLayout);
        pnlManagementSideLayout.setHorizontalGroup(
            pnlManagementSideLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlManagementSideLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lblManagementSide, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        pnlManagementSideLayout.setVerticalGroup(
            pnlManagementSideLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lblManagementSide, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        pnlSide.add(pnlManagementSide, gridBagConstraints);

        pnlUsersSide.setBackground(new java.awt.Color(48, 49, 70));
        pnlUsersSide.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                pnlUsersSideMousePressed(evt);
            }
        });

        lblUsersSide.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        lblUsersSide.setForeground(new java.awt.Color(255, 255, 255));
        lblUsersSide.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblUsersSide.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/quanghuyabc9/images/icons8-conference-24.png"))); // NOI18N
        lblUsersSide.setText("Users");

        javax.swing.GroupLayout pnlUsersSideLayout = new javax.swing.GroupLayout(pnlUsersSide);
        pnlUsersSide.setLayout(pnlUsersSideLayout);
        pnlUsersSideLayout.setHorizontalGroup(
            pnlUsersSideLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlUsersSideLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lblUsersSide, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        pnlUsersSideLayout.setVerticalGroup(
            pnlUsersSideLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lblUsersSide, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        pnlSide.add(pnlUsersSide, gridBagConstraints);

        pnlEmptySide.setBackground(new java.awt.Color(48, 49, 70));

        javax.swing.GroupLayout pnlEmptySideLayout = new javax.swing.GroupLayout(pnlEmptySide);
        pnlEmptySide.setLayout(pnlEmptySideLayout);
        pnlEmptySideLayout.setHorizontalGroup(
            pnlEmptySideLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        pnlEmptySideLayout.setVerticalGroup(
            pnlEmptySideLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        pnlSide.add(pnlEmptySide, gridBagConstraints);

        pnlMain.setBackground(new java.awt.Color(243, 242, 241));
        pnlMain.setMinimumSize(new java.awt.Dimension(0, 0));
        pnlMain.setPreferredSize(new java.awt.Dimension(0, 0));
        pnlMain.setLayout(new java.awt.CardLayout());

        pnlIntroHomeMain.setBackground(new java.awt.Color(243, 242, 241));

        txtIntroHomeMain.setBackground(new java.awt.Color(243, 242, 241));
        txtIntroHomeMain.setColumns(20);
        txtIntroHomeMain.setFont(new java.awt.Font("Dialog", 1, 36)); // NOI18N
        txtIntroHomeMain.setForeground(new java.awt.Color(30, 10, 60));
        txtIntroHomeMain.setLineWrap(true);
        txtIntroHomeMain.setRows(5);
        txtIntroHomeMain.setText("The Best Online Tool To Attend And Manage Conferences");
        txtIntroHomeMain.setWrapStyleWord(true);
        txtIntroHomeMain.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 25, 0, 0));
        txtIntroHomeMain.setFocusable(false);

        javax.swing.GroupLayout pnlIntroHomeMainLayout = new javax.swing.GroupLayout(pnlIntroHomeMain);
        pnlIntroHomeMain.setLayout(pnlIntroHomeMainLayout);
        pnlIntroHomeMainLayout.setHorizontalGroup(
            pnlIntroHomeMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlIntroHomeMainLayout.createSequentialGroup()
                .addComponent(txtIntroHomeMain, javax.swing.GroupLayout.PREFERRED_SIZE, 447, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        pnlIntroHomeMainLayout.setVerticalGroup(
            pnlIntroHomeMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlIntroHomeMainLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(txtIntroHomeMain, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pnlTitleHomeMain.setBackground(new java.awt.Color(243, 242, 241));

        lblAvailableConferencesTitleHomeMain.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        lblAvailableConferencesTitleHomeMain.setForeground(new java.awt.Color(51, 51, 51));
        lblAvailableConferencesTitleHomeMain.setText("Available Conferences");
        lblAvailableConferencesTitleHomeMain.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 25, 0, 0));

        pnlListViewTitleHomeMain.setBackground(new java.awt.Color(243, 242, 241));
        pnlListViewTitleHomeMain.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 153, 153)));
        pnlListViewTitleHomeMain.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                pnlListViewTitleHomeMainMouseMoved(evt);
            }
        });
        pnlListViewTitleHomeMain.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseExited(java.awt.event.MouseEvent evt) {
                pnlListViewTitleHomeMainMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                pnlListViewTitleHomeMainMousePressed(evt);
            }
        });

        lblListViewTitleHomeMain.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblListViewTitleHomeMain.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/quanghuyabc9/images/icons8-list-view-24.png"))); // NOI18N

        javax.swing.GroupLayout pnlListViewTitleHomeMainLayout = new javax.swing.GroupLayout(pnlListViewTitleHomeMain);
        pnlListViewTitleHomeMain.setLayout(pnlListViewTitleHomeMainLayout);
        pnlListViewTitleHomeMainLayout.setHorizontalGroup(
            pnlListViewTitleHomeMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlListViewTitleHomeMainLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(lblListViewTitleHomeMain, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        pnlListViewTitleHomeMainLayout.setVerticalGroup(
            pnlListViewTitleHomeMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lblListViewTitleHomeMain, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 46, Short.MAX_VALUE)
        );

        pnlCardViewTitleHomeMain.setBackground(new java.awt.Color(243, 242, 241));
        pnlCardViewTitleHomeMain.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 153, 153)));
        pnlCardViewTitleHomeMain.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                pnlCardViewTitleHomeMainMouseMoved(evt);
            }
        });
        pnlCardViewTitleHomeMain.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseExited(java.awt.event.MouseEvent evt) {
                pnlCardViewTitleHomeMainMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                pnlCardViewTitleHomeMainMousePressed(evt);
            }
        });

        lblCardViewTitleHomeMain.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblCardViewTitleHomeMain.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/quanghuyabc9/images/icons8-grid-view-24.png"))); // NOI18N

        javax.swing.GroupLayout pnlCardViewTitleHomeMainLayout = new javax.swing.GroupLayout(pnlCardViewTitleHomeMain);
        pnlCardViewTitleHomeMain.setLayout(pnlCardViewTitleHomeMainLayout);
        pnlCardViewTitleHomeMainLayout.setHorizontalGroup(
            pnlCardViewTitleHomeMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lblCardViewTitleHomeMain, javax.swing.GroupLayout.DEFAULT_SIZE, 45, Short.MAX_VALUE)
        );
        pnlCardViewTitleHomeMainLayout.setVerticalGroup(
            pnlCardViewTitleHomeMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lblCardViewTitleHomeMain, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout pnlTitleHomeMainLayout = new javax.swing.GroupLayout(pnlTitleHomeMain);
        pnlTitleHomeMain.setLayout(pnlTitleHomeMainLayout);
        pnlTitleHomeMainLayout.setHorizontalGroup(
            pnlTitleHomeMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlTitleHomeMainLayout.createSequentialGroup()
                .addComponent(lblAvailableConferencesTitleHomeMain, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnlListViewTitleHomeMain, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnlCardViewTitleHomeMain, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnlTitleHomeMainLayout.setVerticalGroup(
            pnlTitleHomeMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlTitleHomeMainLayout.createSequentialGroup()
                .addGroup(pnlTitleHomeMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblAvailableConferencesTitleHomeMain, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pnlListViewTitleHomeMain, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pnlCardViewTitleHomeMain, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(0, 0, 0))
        );

        pnlViewHomeMain.setBackground(new java.awt.Color(243, 242, 241));
        pnlViewHomeMain.setLayout(new java.awt.CardLayout());

        pnlListViewHomeMain.setBackground(new java.awt.Color(243, 242, 241));
        pnlListViewHomeMain.setPreferredSize(new java.awt.Dimension(0, 0));

        pnlColumnNameListViewHomeMain.setBackground(new java.awt.Color(255, 255, 255));
        pnlColumnNameListViewHomeMain.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 25, 0, 0));
        pnlColumnNameListViewHomeMain.setLayout(new java.awt.GridBagLayout());

        lblName.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        lblName.setForeground(new java.awt.Color(51, 51, 51));
        lblName.setText("Name");
        lblName.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 10));
        lblName.setPreferredSize(new java.awt.Dimension(0, 50));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 0.6;
        gridBagConstraints.weighty = 1.0;
        pnlColumnNameListViewHomeMain.add(lblName, gridBagConstraints);

        lblTime.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        lblTime.setForeground(new java.awt.Color(51, 51, 51));
        lblTime.setText("Time");
        lblTime.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 10));
        lblTime.setPreferredSize(new java.awt.Dimension(0, 50));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 0.6;
        gridBagConstraints.weighty = 1.0;
        pnlColumnNameListViewHomeMain.add(lblTime, gridBagConstraints);

        lblDuration.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        lblDuration.setForeground(new java.awt.Color(51, 51, 51));
        lblDuration.setText("Duration");
        lblDuration.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 10));
        lblDuration.setPreferredSize(new java.awt.Dimension(0, 50));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 0.3;
        gridBagConstraints.weighty = 1.0;
        pnlColumnNameListViewHomeMain.add(lblDuration, gridBagConstraints);

        lblPeople.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        lblPeople.setForeground(new java.awt.Color(51, 51, 51));
        lblPeople.setText("People");
        lblPeople.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 10));
        lblPeople.setPreferredSize(new java.awt.Dimension(0, 50));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 0.3;
        gridBagConstraints.weighty = 1.0;
        pnlColumnNameListViewHomeMain.add(lblPeople, gridBagConstraints);

        lblLocation.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        lblLocation.setForeground(new java.awt.Color(51, 51, 51));
        lblLocation.setText("Location");
        lblLocation.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 10));
        lblLocation.setPreferredSize(new java.awt.Dimension(0, 50));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 0.8;
        gridBagConstraints.weighty = 1.0;
        pnlColumnNameListViewHomeMain.add(lblLocation, gridBagConstraints);

        scrColumnValueListViewHomeMain.setBackground(new java.awt.Color(243, 242, 241));
        scrColumnValueListViewHomeMain.setBorder(null);
        scrColumnValueListViewHomeMain.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);

        pnlColumnValueListViewHomeMain.setBackground(new java.awt.Color(243, 242, 241));
        pnlColumnValueListViewHomeMain.setForeground(new java.awt.Color(243, 242, 241));
        pnlColumnValueListViewHomeMain.setLayout(new java.awt.GridBagLayout());
        scrColumnValueListViewHomeMain.setViewportView(pnlColumnValueListViewHomeMain);

        javax.swing.GroupLayout pnlListViewHomeMainLayout = new javax.swing.GroupLayout(pnlListViewHomeMain);
        pnlListViewHomeMain.setLayout(pnlListViewHomeMainLayout);
        pnlListViewHomeMainLayout.setHorizontalGroup(
            pnlListViewHomeMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlColumnNameListViewHomeMain, javax.swing.GroupLayout.DEFAULT_SIZE, 447, Short.MAX_VALUE)
            .addComponent(scrColumnValueListViewHomeMain)
        );
        pnlListViewHomeMainLayout.setVerticalGroup(
            pnlListViewHomeMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlListViewHomeMainLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnlColumnNameListViewHomeMain, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(scrColumnValueListViewHomeMain))
        );

        pnlViewHomeMain.add(pnlListViewHomeMain, "ListView");

        pnlCardViewHomeMain.setBackground(new java.awt.Color(243, 242, 241));
        pnlCardViewHomeMain.setLayout(new java.awt.BorderLayout());

        scrContentCardViewHomeMain.setBorder(null);

        pnlContentCardViewHomeMain.setBackground(new java.awt.Color(243, 242, 241));
        pnlContentCardViewHomeMain.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 25, 0, 25));
        pnlContentCardViewHomeMain.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        pnlContentCardViewHomeMain.setRequestFocusEnabled(false);
        pnlContentCardViewHomeMain.setLayout(new java.awt.GridBagLayout());
        scrContentCardViewHomeMain.setViewportView(pnlContentCardViewHomeMain);

        pnlCardViewHomeMain.add(scrContentCardViewHomeMain, java.awt.BorderLayout.CENTER);

        pnlViewHomeMain.add(pnlCardViewHomeMain, "CardView");

        javax.swing.GroupLayout pnlHomeMainLayout = new javax.swing.GroupLayout(pnlHomeMain);
        pnlHomeMain.setLayout(pnlHomeMainLayout);
        pnlHomeMainLayout.setHorizontalGroup(
            pnlHomeMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlIntroHomeMain, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(pnlTitleHomeMain, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(pnlViewHomeMain, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        pnlHomeMainLayout.setVerticalGroup(
            pnlHomeMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlHomeMainLayout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(pnlIntroHomeMain, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(pnlTitleHomeMain, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(pnlViewHomeMain, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pnlMain.add(pnlHomeMain, "Home");

        pnlYourConferencesMain.setBackground(new java.awt.Color(243, 242, 241));
        pnlYourConferencesMain.setPreferredSize(new java.awt.Dimension(0, 0));

        pnlTopYourConferencesMain.setBackground(new java.awt.Color(255, 255, 255));
        pnlTopYourConferencesMain.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 25, 0, 10));
        pnlTopYourConferencesMain.setPreferredSize(new java.awt.Dimension(0, 50));

        lblTopYourConferencesMain.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        lblTopYourConferencesMain.setForeground(new java.awt.Color(51, 51, 51));
        lblTopYourConferencesMain.setText("Your conferences");

        pnlListViewTopYourConferencesMain.setBackground(new java.awt.Color(255, 255, 255));
        pnlListViewTopYourConferencesMain.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 153, 153)));
        pnlListViewTopYourConferencesMain.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                pnlListViewTopYourConferencesMainMouseMoved(evt);
            }
        });
        pnlListViewTopYourConferencesMain.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseExited(java.awt.event.MouseEvent evt) {
                pnlListViewTopYourConferencesMainMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                pnlListViewTopYourConferencesMainMousePressed(evt);
            }
        });
        pnlListViewTopYourConferencesMain.setLayout(new java.awt.BorderLayout());

        lblListViewTopYourConferencesMain.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblListViewTopYourConferencesMain.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/quanghuyabc9/images/icons8-list-view-24.png"))); // NOI18N
        lblListViewTopYourConferencesMain.setPreferredSize(null);
        pnlListViewTopYourConferencesMain.add(lblListViewTopYourConferencesMain, java.awt.BorderLayout.CENTER);

        pnlCardViewTopYourConferencesMain.setBackground(new java.awt.Color(255, 255, 255));
        pnlCardViewTopYourConferencesMain.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 153, 153)));
        pnlCardViewTopYourConferencesMain.setPreferredSize(new java.awt.Dimension(0, 0));
        pnlCardViewTopYourConferencesMain.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                pnlCardViewTopYourConferencesMainMouseMoved(evt);
            }
        });
        pnlCardViewTopYourConferencesMain.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseExited(java.awt.event.MouseEvent evt) {
                pnlCardViewTopYourConferencesMainMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                pnlCardViewTopYourConferencesMainMousePressed(evt);
            }
        });
        pnlCardViewTopYourConferencesMain.setLayout(new java.awt.BorderLayout());

        lblCardViewTopYourConferencesMain.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblCardViewTopYourConferencesMain.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/quanghuyabc9/images/icons8-grid-view-24.png"))); // NOI18N
        pnlCardViewTopYourConferencesMain.add(lblCardViewTopYourConferencesMain, java.awt.BorderLayout.CENTER);

        pnlSearchIconTopYourConferencesMain.setBackground(new java.awt.Color(243, 242, 241));
        pnlSearchIconTopYourConferencesMain.setLayout(new java.awt.BorderLayout());

        lblSearcIconTopYourConferencesMain.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/quanghuyabc9/images/icons8-search-24.png"))); // NOI18N
        lblSearcIconTopYourConferencesMain.setBorder(javax.swing.BorderFactory.createEmptyBorder(5, 5, 5, 5));
        pnlSearchIconTopYourConferencesMain.add(lblSearcIconTopYourConferencesMain, java.awt.BorderLayout.CENTER);

        txtSearchTopYourConferencesMain.setBackground(new java.awt.Color(243, 242, 241));
        txtSearchTopYourConferencesMain.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        txtSearchTopYourConferencesMain.setForeground(new java.awt.Color(51, 51, 51));
        txtSearchTopYourConferencesMain.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 10, 0, 0));
        txtSearchTopYourConferencesMain.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtSearchTopYourConferencesMainKeyReleased(evt);
            }
        });

        cmbSearchByTopYourConferencesMain.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        cmbSearchByTopYourConferencesMain.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Conference Name", "Address" }));
        cmbSearchByTopYourConferencesMain.setBorder(null);
        cmbSearchByTopYourConferencesMain.setFocusable(false);
        cmbSearchByTopYourConferencesMain.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbSearchByTopYourConferencesMainActionPerformed(evt);
            }
        });

        lblSortByTopYourConferencesMain.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        lblSortByTopYourConferencesMain.setForeground(new java.awt.Color(51, 51, 51));
        lblSortByTopYourConferencesMain.setText("Sort by");

        cmbSortByTopYourConferencesMain.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        cmbSortByTopYourConferencesMain.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Conference Name", "Time Start" }));
        cmbSortByTopYourConferencesMain.setBorder(null);
        cmbSortByTopYourConferencesMain.setFocusable(false);
        cmbSortByTopYourConferencesMain.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbSortByTopYourConferencesMainActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlTopYourConferencesMainLayout = new javax.swing.GroupLayout(pnlTopYourConferencesMain);
        pnlTopYourConferencesMain.setLayout(pnlTopYourConferencesMainLayout);
        pnlTopYourConferencesMainLayout.setHorizontalGroup(
            pnlTopYourConferencesMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlTopYourConferencesMainLayout.createSequentialGroup()
                .addComponent(lblTopYourConferencesMain, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnlSearchIconTopYourConferencesMain, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(txtSearchTopYourConferencesMain, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(cmbSearchByTopYourConferencesMain, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(lblSortByTopYourConferencesMain)
                .addGap(0, 0, 0)
                .addComponent(cmbSortByTopYourConferencesMain, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(374, Short.MAX_VALUE))
            .addGroup(pnlTopYourConferencesMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(pnlTopYourConferencesMainLayout.createSequentialGroup()
                    .addContainerGap(980, Short.MAX_VALUE)
                    .addComponent(pnlListViewTopYourConferencesMain, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(pnlCardViewTopYourConferencesMain, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );
        pnlTopYourConferencesMainLayout.setVerticalGroup(
            pnlTopYourConferencesMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlTopYourConferencesMainLayout.createSequentialGroup()
                .addComponent(lblTopYourConferencesMain, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(pnlTopYourConferencesMainLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlTopYourConferencesMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pnlSearchIconTopYourConferencesMain, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtSearchTopYourConferencesMain)
                    .addComponent(cmbSearchByTopYourConferencesMain)
                    .addComponent(lblSortByTopYourConferencesMain, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(cmbSortByTopYourConferencesMain))
                .addContainerGap())
            .addGroup(pnlTopYourConferencesMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(pnlTopYourConferencesMainLayout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(pnlTopYourConferencesMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(pnlListViewTopYourConferencesMain, javax.swing.GroupLayout.DEFAULT_SIZE, 38, Short.MAX_VALUE)
                        .addComponent(pnlCardViewTopYourConferencesMain, javax.swing.GroupLayout.DEFAULT_SIZE, 38, Short.MAX_VALUE))
                    .addContainerGap()))
        );

        pnlDataYourConferencesMain.setBackground(new java.awt.Color(243, 242, 241));
        pnlDataYourConferencesMain.setPreferredSize(new java.awt.Dimension(0, 0));
        pnlDataYourConferencesMain.setLayout(new java.awt.CardLayout());

        pnlListViewDataYourConferencesMain.setBackground(new java.awt.Color(243, 242, 241));

        pnlColumnNameListViewDataYourConferencesMain.setBackground(new java.awt.Color(255, 255, 255));
        pnlColumnNameListViewDataYourConferencesMain.setLayout(new java.awt.GridBagLayout());

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 25, 0, 0));
        jPanel1.setLayout(new java.awt.GridBagLayout());

        jLabel1.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(51, 51, 51));
        jLabel1.setText("Name");
        jLabel1.setPreferredSize(new java.awt.Dimension(0, 0));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.6;
        gridBagConstraints.weighty = 1.0;
        jPanel1.add(jLabel1, gridBagConstraints);

        jLabel2.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(51, 51, 51));
        jLabel2.setText("Time");
        jLabel2.setPreferredSize(new java.awt.Dimension(0, 0));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.4;
        gridBagConstraints.weighty = 1.0;
        jPanel1.add(jLabel2, gridBagConstraints);

        jLabel3.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(51, 51, 51));
        jLabel3.setText("Duration");
        jLabel3.setPreferredSize(new java.awt.Dimension(0, 0));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.2;
        gridBagConstraints.weighty = 1.0;
        jPanel1.add(jLabel3, gridBagConstraints);

        jLabel4.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(51, 51, 51));
        jLabel4.setText("People");
        jLabel4.setPreferredSize(new java.awt.Dimension(0, 0));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.15;
        gridBagConstraints.weighty = 1.0;
        jPanel1.add(jLabel4, gridBagConstraints);

        jLabel5.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(51, 51, 51));
        jLabel5.setText("Location");
        jLabel5.setPreferredSize(new java.awt.Dimension(0, 0));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.8;
        gridBagConstraints.weighty = 1.0;
        jPanel1.add(jLabel5, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        pnlColumnNameListViewDataYourConferencesMain.add(jPanel1, gridBagConstraints);

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.05;
        gridBagConstraints.weighty = 1.0;
        pnlColumnNameListViewDataYourConferencesMain.add(jPanel2, gridBagConstraints);

        scrColumnValueListViewDataYourConferencesMain.setBorder(null);
        scrColumnValueListViewDataYourConferencesMain.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);

        pnlColumnValueListViewDataYourConferencesMain.setBackground(new java.awt.Color(243, 242, 241));
        pnlColumnValueListViewDataYourConferencesMain.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        pnlColumnValueListViewDataYourConferencesMain.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        pnlColumnValueListViewDataYourConferencesMain.setRequestFocusEnabled(false);
        pnlColumnValueListViewDataYourConferencesMain.setLayout(new java.awt.GridBagLayout());
        scrColumnValueListViewDataYourConferencesMain.setViewportView(pnlColumnValueListViewDataYourConferencesMain);

        javax.swing.GroupLayout pnlListViewDataYourConferencesMainLayout = new javax.swing.GroupLayout(pnlListViewDataYourConferencesMain);
        pnlListViewDataYourConferencesMain.setLayout(pnlListViewDataYourConferencesMainLayout);
        pnlListViewDataYourConferencesMainLayout.setHorizontalGroup(
            pnlListViewDataYourConferencesMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlColumnNameListViewDataYourConferencesMain, javax.swing.GroupLayout.DEFAULT_SIZE, 1116, Short.MAX_VALUE)
            .addComponent(scrColumnValueListViewDataYourConferencesMain)
        );
        pnlListViewDataYourConferencesMainLayout.setVerticalGroup(
            pnlListViewDataYourConferencesMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlListViewDataYourConferencesMainLayout.createSequentialGroup()
                .addComponent(pnlColumnNameListViewDataYourConferencesMain, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(scrColumnValueListViewDataYourConferencesMain, javax.swing.GroupLayout.PREFERRED_SIZE, 549, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pnlDataYourConferencesMain.add(pnlListViewDataYourConferencesMain, "ListViewYourConferences");

        pnlCardViewDataYourConferencesMain.setLayout(new java.awt.BorderLayout());

        scrValueCardViewDataYourConferencesMain.setBorder(null);

        pnlValueCardViewDataYourConferencesMain.setBackground(new java.awt.Color(243, 242, 241));
        pnlValueCardViewDataYourConferencesMain.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 25, 0, 25));
        pnlValueCardViewDataYourConferencesMain.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        pnlValueCardViewDataYourConferencesMain.setRequestFocusEnabled(false);
        pnlValueCardViewDataYourConferencesMain.setLayout(new java.awt.GridBagLayout());
        scrValueCardViewDataYourConferencesMain.setViewportView(pnlValueCardViewDataYourConferencesMain);

        pnlCardViewDataYourConferencesMain.add(scrValueCardViewDataYourConferencesMain, java.awt.BorderLayout.CENTER);

        pnlDataYourConferencesMain.add(pnlCardViewDataYourConferencesMain, "CardViewYourConferences");

        javax.swing.GroupLayout pnlYourConferencesMainLayout = new javax.swing.GroupLayout(pnlYourConferencesMain);
        pnlYourConferencesMain.setLayout(pnlYourConferencesMainLayout);
        pnlYourConferencesMainLayout.setHorizontalGroup(
            pnlYourConferencesMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlTopYourConferencesMain, javax.swing.GroupLayout.DEFAULT_SIZE, 1116, Short.MAX_VALUE)
            .addComponent(pnlDataYourConferencesMain, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        pnlYourConferencesMainLayout.setVerticalGroup(
            pnlYourConferencesMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlYourConferencesMainLayout.createSequentialGroup()
                .addComponent(pnlTopYourConferencesMain, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnlDataYourConferencesMain, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pnlMain.add(pnlYourConferencesMain, "YourConferences");

        pnlManagementMain.setBackground(new java.awt.Color(243, 242, 241));
        pnlManagementMain.setToolTipText("");

        pnlTopManagementMain.setBackground(new java.awt.Color(255, 255, 255));
        pnlTopManagementMain.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 25, 0, 0));
        pnlTopManagementMain.setPreferredSize(new java.awt.Dimension(445, 50));

        lblManagementForAdminTopManagementMain.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        lblManagementForAdminTopManagementMain.setForeground(new java.awt.Color(51, 51, 51));
        lblManagementForAdminTopManagementMain.setText("Management for Admin");

        pnlCreateConferenceTopManagementMain.setBackground(new java.awt.Color(255, 255, 255));
        pnlCreateConferenceTopManagementMain.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(224, 223, 221)));
        pnlCreateConferenceTopManagementMain.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                pnlCreateConferenceTopManagementMainMouseMoved(evt);
            }
        });
        pnlCreateConferenceTopManagementMain.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseExited(java.awt.event.MouseEvent evt) {
                pnlCreateConferenceTopManagementMainMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                pnlCreateConferenceTopManagementMainMousePressed(evt);
            }
        });
        pnlCreateConferenceTopManagementMain.setLayout(new java.awt.BorderLayout());

        lblCreateConferenceTopManagementMain.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        lblCreateConferenceTopManagementMain.setForeground(new java.awt.Color(51, 51, 51));
        lblCreateConferenceTopManagementMain.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblCreateConferenceTopManagementMain.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/quanghuyabc9/images/icons8-plus-math-24.png"))); // NOI18N
        lblCreateConferenceTopManagementMain.setText("Create Conference");
        pnlCreateConferenceTopManagementMain.add(lblCreateConferenceTopManagementMain, java.awt.BorderLayout.CENTER);

        javax.swing.GroupLayout pnlTopManagementMainLayout = new javax.swing.GroupLayout(pnlTopManagementMain);
        pnlTopManagementMain.setLayout(pnlTopManagementMainLayout);
        pnlTopManagementMainLayout.setHorizontalGroup(
            pnlTopManagementMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlTopManagementMainLayout.createSequentialGroup()
                .addComponent(lblManagementForAdminTopManagementMain, javax.swing.GroupLayout.PREFERRED_SIZE, 231, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(pnlCreateConferenceTopManagementMain, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(16, 16, 16))
        );
        pnlTopManagementMainLayout.setVerticalGroup(
            pnlTopManagementMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lblManagementForAdminTopManagementMain, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(pnlTopManagementMainLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnlCreateConferenceTopManagementMain, javax.swing.GroupLayout.DEFAULT_SIZE, 38, Short.MAX_VALUE)
                .addContainerGap())
        );

        pnlColumnNameManagementMain.setBackground(new java.awt.Color(255, 255, 255));
        pnlColumnNameManagementMain.setLayout(new java.awt.GridBagLayout());

        pnlTextColumnNameManagementMain.setBackground(new java.awt.Color(255, 255, 255));
        pnlTextColumnNameManagementMain.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 25, 0, 0));
        pnlTextColumnNameManagementMain.setPreferredSize(new java.awt.Dimension(0, 0));
        pnlTextColumnNameManagementMain.setLayout(new java.awt.GridBagLayout());

        lblIdTextColumnNameManagementMain.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        lblIdTextColumnNameManagementMain.setForeground(new java.awt.Color(51, 51, 51));
        lblIdTextColumnNameManagementMain.setText("ID");
        lblIdTextColumnNameManagementMain.setPreferredSize(new java.awt.Dimension(0, 0));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.2;
        gridBagConstraints.weighty = 1.0;
        pnlTextColumnNameManagementMain.add(lblIdTextColumnNameManagementMain, gridBagConstraints);

        lblNameTextColumnNameManagementMain.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        lblNameTextColumnNameManagementMain.setForeground(new java.awt.Color(51, 51, 51));
        lblNameTextColumnNameManagementMain.setText("Name");
        lblNameTextColumnNameManagementMain.setPreferredSize(new java.awt.Dimension(0, 0));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        pnlTextColumnNameManagementMain.add(lblNameTextColumnNameManagementMain, gridBagConstraints);

        lblLocationTextColumnNameManagementMain.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        lblLocationTextColumnNameManagementMain.setForeground(new java.awt.Color(51, 51, 51));
        lblLocationTextColumnNameManagementMain.setText("Location");
        lblLocationTextColumnNameManagementMain.setPreferredSize(new java.awt.Dimension(0, 0));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        pnlTextColumnNameManagementMain.add(lblLocationTextColumnNameManagementMain, gridBagConstraints);

        lblTimeTextColumnNameManagementMain.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        lblTimeTextColumnNameManagementMain.setForeground(new java.awt.Color(51, 51, 51));
        lblTimeTextColumnNameManagementMain.setText("Time");
        lblTimeTextColumnNameManagementMain.setPreferredSize(new java.awt.Dimension(0, 0));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.8;
        gridBagConstraints.weighty = 1.0;
        pnlTextColumnNameManagementMain.add(lblTimeTextColumnNameManagementMain, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        pnlColumnNameManagementMain.add(pnlTextColumnNameManagementMain, gridBagConstraints);

        lblEmptyColumnNameManagementMain.setBackground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout lblEmptyColumnNameManagementMainLayout = new javax.swing.GroupLayout(lblEmptyColumnNameManagementMain);
        lblEmptyColumnNameManagementMain.setLayout(lblEmptyColumnNameManagementMainLayout);
        lblEmptyColumnNameManagementMainLayout.setHorizontalGroup(
            lblEmptyColumnNameManagementMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        lblEmptyColumnNameManagementMainLayout.setVerticalGroup(
            lblEmptyColumnNameManagementMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.2;
        gridBagConstraints.weighty = 1.0;
        pnlColumnNameManagementMain.add(lblEmptyColumnNameManagementMain, gridBagConstraints);

        scrColumnValueManagementMain.setBorder(null);
        scrColumnValueManagementMain.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);

        pnlColumnValueManagementMain.setBackground(new java.awt.Color(243, 242, 241));
        pnlColumnValueManagementMain.setLayout(new java.awt.GridBagLayout());
        scrColumnValueManagementMain.setViewportView(pnlColumnValueManagementMain);

        javax.swing.GroupLayout pnlManagementMainLayout = new javax.swing.GroupLayout(pnlManagementMain);
        pnlManagementMain.setLayout(pnlManagementMainLayout);
        pnlManagementMainLayout.setHorizontalGroup(
            pnlManagementMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlTopManagementMain, javax.swing.GroupLayout.DEFAULT_SIZE, 1116, Short.MAX_VALUE)
            .addComponent(scrColumnValueManagementMain)
            .addComponent(pnlColumnNameManagementMain, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        pnlManagementMainLayout.setVerticalGroup(
            pnlManagementMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlManagementMainLayout.createSequentialGroup()
                .addComponent(pnlTopManagementMain, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnlColumnNameManagementMain, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(scrColumnValueManagementMain, javax.swing.GroupLayout.PREFERRED_SIZE, 556, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pnlMain.add(pnlManagementMain, "Management");

        pnlDetailConferenceMain.setBackground(new java.awt.Color(243, 242, 241));
        pnlDetailConferenceMain.setLayout(new java.awt.BorderLayout());

        pnlTopDetailConferenceMain.setBackground(new java.awt.Color(243, 242, 241));
        pnlTopDetailConferenceMain.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 25, 0, 0));
        pnlTopDetailConferenceMain.setPreferredSize(new java.awt.Dimension(0, 50));

        lblDetailConferenceTopDetailConferenceMain.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        lblDetailConferenceTopDetailConferenceMain.setForeground(new java.awt.Color(51, 51, 51));
        lblDetailConferenceTopDetailConferenceMain.setText("Detail Conference");

        javax.swing.GroupLayout pnlTopDetailConferenceMainLayout = new javax.swing.GroupLayout(pnlTopDetailConferenceMain);
        pnlTopDetailConferenceMain.setLayout(pnlTopDetailConferenceMainLayout);
        pnlTopDetailConferenceMainLayout.setHorizontalGroup(
            pnlTopDetailConferenceMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlTopDetailConferenceMainLayout.createSequentialGroup()
                .addComponent(lblDetailConferenceTopDetailConferenceMain)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        pnlTopDetailConferenceMainLayout.setVerticalGroup(
            pnlTopDetailConferenceMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lblDetailConferenceTopDetailConferenceMain, javax.swing.GroupLayout.DEFAULT_SIZE, 50, Short.MAX_VALUE)
        );

        pnlDetailConferenceMain.add(pnlTopDetailConferenceMain, java.awt.BorderLayout.PAGE_START);

        scrMainDetailConferenceMain.setBorder(null);

        pnlMainDetailConferenceMain.setBackground(new java.awt.Color(243, 242, 241));
        pnlMainDetailConferenceMain.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 25, 0, 25));

        pnlBasicInfoMainDetailConferenceMain.setBackground(new java.awt.Color(243, 242, 241));
        pnlBasicInfoMainDetailConferenceMain.setPreferredSize(new java.awt.Dimension(0, 330));

        pnlImageBasicInfoMainDetailConferenceMain.setBackground(new java.awt.Color(243, 242, 241));
        pnlImageBasicInfoMainDetailConferenceMain.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(223, 220, 230), 2, true));
        pnlImageBasicInfoMainDetailConferenceMain.setPreferredSize(new java.awt.Dimension(871, 4));

        javax.swing.GroupLayout pnlImageBasicInfoMainDetailConferenceMainLayout = new javax.swing.GroupLayout(pnlImageBasicInfoMainDetailConferenceMain);
        pnlImageBasicInfoMainDetailConferenceMain.setLayout(pnlImageBasicInfoMainDetailConferenceMainLayout);
        pnlImageBasicInfoMainDetailConferenceMainLayout.setHorizontalGroup(
            pnlImageBasicInfoMainDetailConferenceMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lblImageDetailConference, javax.swing.GroupLayout.DEFAULT_SIZE, 867, Short.MAX_VALUE)
        );
        pnlImageBasicInfoMainDetailConferenceMainLayout.setVerticalGroup(
            pnlImageBasicInfoMainDetailConferenceMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lblImageDetailConference, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        lblBriefDateBasicInfoMainDetailConferenceMain.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        lblBriefDateBasicInfoMainDetailConferenceMain.setForeground(new java.awt.Color(51, 51, 51));
        lblBriefDateBasicInfoMainDetailConferenceMain.setText("17/06/2020");

        scrNameBasicInfoMainDetailConferenceMain.setBorder(null);
        scrNameBasicInfoMainDetailConferenceMain.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);

        txtNameBasicInfoMainDetailConferenceMain.setEditable(false);
        txtNameBasicInfoMainDetailConferenceMain.setBackground(new java.awt.Color(243, 242, 241));
        txtNameBasicInfoMainDetailConferenceMain.setColumns(20);
        txtNameBasicInfoMainDetailConferenceMain.setFont(new java.awt.Font("Dialog", 0, 24)); // NOI18N
        txtNameBasicInfoMainDetailConferenceMain.setForeground(new java.awt.Color(30, 10, 60));
        txtNameBasicInfoMainDetailConferenceMain.setLineWrap(true);
        txtNameBasicInfoMainDetailConferenceMain.setRows(5);
        txtNameBasicInfoMainDetailConferenceMain.setText("Navigating Workplace Microaggressions for Women of Color: Parts 2 + 3");
        txtNameBasicInfoMainDetailConferenceMain.setMinimumSize(new java.awt.Dimension(1, 10));
        scrNameBasicInfoMainDetailConferenceMain.setViewportView(txtNameBasicInfoMainDetailConferenceMain);

        pnlEnrollBasicInfoMainDetailConferenceMain.setBackground(new java.awt.Color(46, 164, 79));
        pnlEnrollBasicInfoMainDetailConferenceMain.setBorder(javax.swing.BorderFactory.createEmptyBorder(10, 25, 10, 25));
        pnlEnrollBasicInfoMainDetailConferenceMain.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                pnlEnrollBasicInfoMainDetailConferenceMainMouseMoved(evt);
            }
        });
        pnlEnrollBasicInfoMainDetailConferenceMain.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseExited(java.awt.event.MouseEvent evt) {
                pnlEnrollBasicInfoMainDetailConferenceMainMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                pnlEnrollBasicInfoMainDetailConferenceMainMousePressed(evt);
            }
        });
        pnlEnrollBasicInfoMainDetailConferenceMain.setLayout(new java.awt.BorderLayout());

        lblEnrollBasicInfoMainDetailConferenceMain.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        lblEnrollBasicInfoMainDetailConferenceMain.setForeground(new java.awt.Color(255, 255, 255));
        lblEnrollBasicInfoMainDetailConferenceMain.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblEnrollBasicInfoMainDetailConferenceMain.setText("Enroll");
        pnlEnrollBasicInfoMainDetailConferenceMain.add(lblEnrollBasicInfoMainDetailConferenceMain, java.awt.BorderLayout.CENTER);

        lblAnnouBasicInfoMainDetailConferenceMain.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        lblAnnouBasicInfoMainDetailConferenceMain.setForeground(new java.awt.Color(46, 164, 79));
        lblAnnouBasicInfoMainDetailConferenceMain.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout pnlBasicInfoMainDetailConferenceMainLayout = new javax.swing.GroupLayout(pnlBasicInfoMainDetailConferenceMain);
        pnlBasicInfoMainDetailConferenceMain.setLayout(pnlBasicInfoMainDetailConferenceMainLayout);
        pnlBasicInfoMainDetailConferenceMainLayout.setHorizontalGroup(
            pnlBasicInfoMainDetailConferenceMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlBasicInfoMainDetailConferenceMainLayout.createSequentialGroup()
                .addComponent(pnlImageBasicInfoMainDetailConferenceMain, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlBasicInfoMainDetailConferenceMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlBasicInfoMainDetailConferenceMainLayout.createSequentialGroup()
                        .addComponent(lblBriefDateBasicInfoMainDetailConferenceMain, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(pnlBasicInfoMainDetailConferenceMainLayout.createSequentialGroup()
                        .addGroup(pnlBasicInfoMainDetailConferenceMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(pnlEnrollBasicInfoMainDetailConferenceMain, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblAnnouBasicInfoMainDetailConferenceMain, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(scrNameBasicInfoMainDetailConferenceMain, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)))
        );
        pnlBasicInfoMainDetailConferenceMainLayout.setVerticalGroup(
            pnlBasicInfoMainDetailConferenceMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlBasicInfoMainDetailConferenceMainLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblBriefDateBasicInfoMainDetailConferenceMain, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(scrNameBasicInfoMainDetailConferenceMain, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblAnnouBasicInfoMainDetailConferenceMain, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 23, Short.MAX_VALUE)
                .addComponent(pnlEnrollBasicInfoMainDetailConferenceMain, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addComponent(pnlImageBasicInfoMainDetailConferenceMain, javax.swing.GroupLayout.DEFAULT_SIZE, 324, Short.MAX_VALUE)
        );

        pnlDetailInfoMainDetailConferenceMain.setBackground(new java.awt.Color(243, 242, 241));

        pnlDesDetailInfoMainDetailConferenceMain.setBackground(new java.awt.Color(243, 242, 241));

        scrBriefDesDesDetailInfoMainDetailConferenceMain.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(153, 153, 153), 2, true));

        txtBriefDesDesDetailInfoMainDetailConferenceMain.setEditable(false);
        txtBriefDesDesDetailInfoMainDetailConferenceMain.setBackground(new java.awt.Color(243, 242, 241));
        txtBriefDesDesDetailInfoMainDetailConferenceMain.setColumns(20);
        txtBriefDesDesDetailInfoMainDetailConferenceMain.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        txtBriefDesDesDetailInfoMainDetailConferenceMain.setForeground(new java.awt.Color(51, 51, 51));
        txtBriefDesDesDetailInfoMainDetailConferenceMain.setLineWrap(true);
        txtBriefDesDesDetailInfoMainDetailConferenceMain.setRows(5);
        txtBriefDesDesDetailInfoMainDetailConferenceMain.setText("Join Jodi-Ann Burey for an interactive webinar to go through case study examples on the microaggressions women of color face at work.");
        txtBriefDesDesDetailInfoMainDetailConferenceMain.setBorder(javax.swing.BorderFactory.createEmptyBorder(10, 10, 10, 10));
        scrBriefDesDesDetailInfoMainDetailConferenceMain.setViewportView(txtBriefDesDesDetailInfoMainDetailConferenceMain);

        lblAboutDesDetailInfoMainDetailConferenceMain.setFont(new java.awt.Font("Dialog", 1, 16)); // NOI18N
        lblAboutDesDetailInfoMainDetailConferenceMain.setForeground(new java.awt.Color(51, 51, 51));
        lblAboutDesDetailInfoMainDetailConferenceMain.setText("About conference");

        scrDetailDesDesDetailInfoMainDetailConferenceMain.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(153, 153, 153), 2, true));

        txtDetailDesDesDetailInfoMainDetailConferenceMain.setEditable(false);
        txtDetailDesDesDetailInfoMainDetailConferenceMain.setBackground(new java.awt.Color(243, 242, 241));
        txtDetailDesDesDetailInfoMainDetailConferenceMain.setColumns(20);
        txtDetailDesDesDetailInfoMainDetailConferenceMain.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        txtDetailDesDesDetailInfoMainDetailConferenceMain.setForeground(new java.awt.Color(51, 51, 51));
        txtDetailDesDesDetailInfoMainDetailConferenceMain.setLineWrap(true);
        txtDetailDesDesDetailInfoMainDetailConferenceMain.setRows(5);
        txtDetailDesDesDetailInfoMainDetailConferenceMain.setText("With workplaces closed across the country, working from home may have come as a welcomed relief for the many women of color who experience chronic racial stress from navigating racial microaggressions at work. These microaggressions can be reproduced virtually, as many workplaces have moved online due to the COVID-19 pandemic.   Join Jodi-Ann Burey for an interactive webinar to go through case study examples on the experiences women of color face at work and explore the options for managing your mindset and constructing an effective response. Participants are encouraged to share their own experiences.");
        txtDetailDesDesDetailInfoMainDetailConferenceMain.setBorder(javax.swing.BorderFactory.createEmptyBorder(10, 10, 10, 10));
        scrDetailDesDesDetailInfoMainDetailConferenceMain.setViewportView(txtDetailDesDesDetailInfoMainDetailConferenceMain);

        lblListPeopleInfoDetailInfoMainDetailConferenceMain.setFont(new java.awt.Font("Dialog", 1, 16)); // NOI18N
        lblListPeopleInfoDetailInfoMainDetailConferenceMain.setForeground(new java.awt.Color(51, 51, 51));
        lblListPeopleInfoDetailInfoMainDetailConferenceMain.setText("List people");

        scrListPeopleValueDesDetailInfoMainDetailConferenceMain.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(153, 153, 153), 2, true));

        pnlListPeopleValueDesDetailInfoMainDetailConferenceMain.setBackground(new java.awt.Color(255, 255, 255));
        pnlListPeopleValueDesDetailInfoMainDetailConferenceMain.setBorder(javax.swing.BorderFactory.createEmptyBorder(10, 10, 10, 10));
        pnlListPeopleValueDesDetailInfoMainDetailConferenceMain.setLayout(new java.awt.GridBagLayout());
        scrListPeopleValueDesDetailInfoMainDetailConferenceMain.setViewportView(pnlListPeopleValueDesDetailInfoMainDetailConferenceMain);

        javax.swing.GroupLayout pnlDesDetailInfoMainDetailConferenceMainLayout = new javax.swing.GroupLayout(pnlDesDetailInfoMainDetailConferenceMain);
        pnlDesDetailInfoMainDetailConferenceMain.setLayout(pnlDesDetailInfoMainDetailConferenceMainLayout);
        pnlDesDetailInfoMainDetailConferenceMainLayout.setHorizontalGroup(
            pnlDesDetailInfoMainDetailConferenceMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(scrBriefDesDesDetailInfoMainDetailConferenceMain)
            .addComponent(scrDetailDesDesDetailInfoMainDetailConferenceMain)
            .addGroup(pnlDesDetailInfoMainDetailConferenceMainLayout.createSequentialGroup()
                .addGroup(pnlDesDetailInfoMainDetailConferenceMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblListPeopleInfoDetailInfoMainDetailConferenceMain)
                    .addComponent(scrListPeopleValueDesDetailInfoMainDetailConferenceMain, javax.swing.GroupLayout.PREFERRED_SIZE, 417, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblAboutDesDetailInfoMainDetailConferenceMain))
                .addGap(0, 453, Short.MAX_VALUE))
        );
        pnlDesDetailInfoMainDetailConferenceMainLayout.setVerticalGroup(
            pnlDesDetailInfoMainDetailConferenceMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlDesDetailInfoMainDetailConferenceMainLayout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(scrBriefDesDesDetailInfoMainDetailConferenceMain, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addComponent(lblAboutDesDetailInfoMainDetailConferenceMain)
                .addGap(18, 18, 18)
                .addComponent(scrDetailDesDesDetailInfoMainDetailConferenceMain, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lblListPeopleInfoDetailInfoMainDetailConferenceMain, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(scrListPeopleValueDesDetailInfoMainDetailConferenceMain, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(17, Short.MAX_VALUE))
        );

        pnlInfoDetailInfoMainDetailConferenceMain.setBackground(new java.awt.Color(243, 242, 241));

        lblDateAndTimeInfoDetailInfoMainDetailConferenceMain.setFont(new java.awt.Font("Dialog", 1, 16)); // NOI18N
        lblDateAndTimeInfoDetailInfoMainDetailConferenceMain.setForeground(new java.awt.Color(51, 51, 51));
        lblDateAndTimeInfoDetailInfoMainDetailConferenceMain.setText("Date And Time");

        lblDateInfoDetailInfoMainDetailConferenceMain.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        lblDateInfoDetailInfoMainDetailConferenceMain.setForeground(new java.awt.Color(51, 51, 51));
        lblDateInfoDetailInfoMainDetailConferenceMain.setText("Fri, July 17, 2020");

        lblTimeInfoDetailInfoMainDetailConferenceMain.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        lblTimeInfoDetailInfoMainDetailConferenceMain.setForeground(new java.awt.Color(51, 51, 51));
        lblTimeInfoDetailInfoMainDetailConferenceMain.setText("02:00:00");

        lblDurationInfoDetailInfoMainDetailConferenceMain.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        lblDurationInfoDetailInfoMainDetailConferenceMain.setForeground(new java.awt.Color(51, 51, 51));
        lblDurationInfoDetailInfoMainDetailConferenceMain.setText("Duration 02:00:00");

        lblLocationInfoDetailInfoMainDetailConferenceMain.setFont(new java.awt.Font("Dialog", 1, 16)); // NOI18N
        lblLocationInfoDetailInfoMainDetailConferenceMain.setForeground(new java.awt.Color(51, 51, 51));
        lblLocationInfoDetailInfoMainDetailConferenceMain.setText("Location");

        lblNameLocationInfoDetailInfoMainDetailConferenceMain.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        lblNameLocationInfoDetailInfoMainDetailConferenceMain.setForeground(new java.awt.Color(51, 51, 51));
        lblNameLocationInfoDetailInfoMainDetailConferenceMain.setText("Nhà văn hóa sinh viên");

        scrAddressLocationInfoDetailInfoMainDetailConferenceMain.setBorder(null);

        txtAddressLocationInfoDetailInfoMainDetailConferenceMain.setBackground(new java.awt.Color(243, 242, 241));
        txtAddressLocationInfoDetailInfoMainDetailConferenceMain.setColumns(20);
        txtAddressLocationInfoDetailInfoMainDetailConferenceMain.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        txtAddressLocationInfoDetailInfoMainDetailConferenceMain.setForeground(new java.awt.Color(51, 51, 51));
        txtAddressLocationInfoDetailInfoMainDetailConferenceMain.setLineWrap(true);
        txtAddressLocationInfoDetailInfoMainDetailConferenceMain.setRows(5);
        txtAddressLocationInfoDetailInfoMainDetailConferenceMain.setText("Quận Thủ Đứcddddddddddddddddddddddddd");
        txtAddressLocationInfoDetailInfoMainDetailConferenceMain.setPreferredSize(new java.awt.Dimension(0, 0));
        scrAddressLocationInfoDetailInfoMainDetailConferenceMain.setViewportView(txtAddressLocationInfoDetailInfoMainDetailConferenceMain);

        lblCapacityInfoDetailInfoMainDetailConferenceMain.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        lblCapacityInfoDetailInfoMainDetailConferenceMain.setForeground(new java.awt.Color(51, 51, 51));
        lblCapacityInfoDetailInfoMainDetailConferenceMain.setText("Capacity");

        lblCapacityValueInfoDetailInfoMainDetailConferenceMain.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        lblCapacityValueInfoDetailInfoMainDetailConferenceMain.setForeground(new java.awt.Color(51, 51, 51));
        lblCapacityValueInfoDetailInfoMainDetailConferenceMain.setText("15");

        javax.swing.GroupLayout pnlInfoDetailInfoMainDetailConferenceMainLayout = new javax.swing.GroupLayout(pnlInfoDetailInfoMainDetailConferenceMain);
        pnlInfoDetailInfoMainDetailConferenceMain.setLayout(pnlInfoDetailInfoMainDetailConferenceMainLayout);
        pnlInfoDetailInfoMainDetailConferenceMainLayout.setHorizontalGroup(
            pnlInfoDetailInfoMainDetailConferenceMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(scrAddressLocationInfoDetailInfoMainDetailConferenceMain, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
            .addGroup(pnlInfoDetailInfoMainDetailConferenceMainLayout.createSequentialGroup()
                .addComponent(lblCapacityInfoDetailInfoMainDetailConferenceMain)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(pnlInfoDetailInfoMainDetailConferenceMainLayout.createSequentialGroup()
                .addGroup(pnlInfoDetailInfoMainDetailConferenceMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblDateInfoDetailInfoMainDetailConferenceMain)
                    .addComponent(lblNameLocationInfoDetailInfoMainDetailConferenceMain)
                    .addComponent(lblLocationInfoDetailInfoMainDetailConferenceMain)
                    .addGroup(pnlInfoDetailInfoMainDetailConferenceMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(lblDateAndTimeInfoDetailInfoMainDetailConferenceMain, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lblDurationInfoDetailInfoMainDetailConferenceMain, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(lblTimeInfoDetailInfoMainDetailConferenceMain)
                    .addGroup(pnlInfoDetailInfoMainDetailConferenceMainLayout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addComponent(lblCapacityValueInfoDetailInfoMainDetailConferenceMain)))
                .addContainerGap(35, Short.MAX_VALUE))
        );
        pnlInfoDetailInfoMainDetailConferenceMainLayout.setVerticalGroup(
            pnlInfoDetailInfoMainDetailConferenceMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlInfoDetailInfoMainDetailConferenceMainLayout.createSequentialGroup()
                .addComponent(lblDateAndTimeInfoDetailInfoMainDetailConferenceMain, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblDateInfoDetailInfoMainDetailConferenceMain)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblTimeInfoDetailInfoMainDetailConferenceMain, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblDurationInfoDetailInfoMainDetailConferenceMain)
                .addGap(18, 18, 18)
                .addComponent(lblLocationInfoDetailInfoMainDetailConferenceMain, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblNameLocationInfoDetailInfoMainDetailConferenceMain)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(scrAddressLocationInfoDetailInfoMainDetailConferenceMain, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(83, 83, 83)
                .addComponent(lblCapacityInfoDetailInfoMainDetailConferenceMain)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblCapacityValueInfoDetailInfoMainDetailConferenceMain)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout pnlDetailInfoMainDetailConferenceMainLayout = new javax.swing.GroupLayout(pnlDetailInfoMainDetailConferenceMain);
        pnlDetailInfoMainDetailConferenceMain.setLayout(pnlDetailInfoMainDetailConferenceMainLayout);
        pnlDetailInfoMainDetailConferenceMainLayout.setHorizontalGroup(
            pnlDetailInfoMainDetailConferenceMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlDetailInfoMainDetailConferenceMainLayout.createSequentialGroup()
                .addComponent(pnlDesDetailInfoMainDetailConferenceMain, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnlInfoDetailInfoMainDetailConferenceMain, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnlDetailInfoMainDetailConferenceMainLayout.setVerticalGroup(
            pnlDetailInfoMainDetailConferenceMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlDesDetailInfoMainDetailConferenceMain, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(pnlInfoDetailInfoMainDetailConferenceMain, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout pnlMainDetailConferenceMainLayout = new javax.swing.GroupLayout(pnlMainDetailConferenceMain);
        pnlMainDetailConferenceMain.setLayout(pnlMainDetailConferenceMainLayout);
        pnlMainDetailConferenceMainLayout.setHorizontalGroup(
            pnlMainDetailConferenceMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlBasicInfoMainDetailConferenceMain, javax.swing.GroupLayout.DEFAULT_SIZE, 1053, Short.MAX_VALUE)
            .addComponent(pnlDetailInfoMainDetailConferenceMain, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        pnlMainDetailConferenceMainLayout.setVerticalGroup(
            pnlMainDetailConferenceMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlMainDetailConferenceMainLayout.createSequentialGroup()
                .addComponent(pnlBasicInfoMainDetailConferenceMain, javax.swing.GroupLayout.PREFERRED_SIZE, 324, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(pnlDetailInfoMainDetailConferenceMain, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        scrMainDetailConferenceMain.setViewportView(pnlMainDetailConferenceMain);

        pnlDetailConferenceMain.add(scrMainDetailConferenceMain, java.awt.BorderLayout.CENTER);

        pnlMain.add(pnlDetailConferenceMain, "DetailConference");

        pnlUsersMain.setBackground(new java.awt.Color(243, 242, 241));

        pnlTopUsersMain.setBackground(new java.awt.Color(255, 255, 255));
        pnlTopUsersMain.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 25, 0, 0));
        pnlTopUsersMain.setPreferredSize(new java.awt.Dimension(0, 50));

        lblUsersManagementTopUsersMain.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        lblUsersManagementTopUsersMain.setForeground(new java.awt.Color(51, 51, 51));
        lblUsersManagementTopUsersMain.setText("Users Management");

        lblSortByTopUsersMain.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        lblSortByTopUsersMain.setForeground(new java.awt.Color(51, 51, 51));
        lblSortByTopUsersMain.setText("Sort by:");

        lblFilterByTopUsersMain.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        lblFilterByTopUsersMain.setForeground(new java.awt.Color(51, 51, 51));
        lblFilterByTopUsersMain.setText("Filter by:");

        cmbSortByTopUsersMain.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        cmbSortByTopUsersMain.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "ID", "Fullname", "Username", "Email" }));
        cmbSortByTopUsersMain.setFocusable(false);
        cmbSortByTopUsersMain.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbSortByTopUsersMainActionPerformed(evt);
            }
        });

        cmbFilterByTopUsersMain.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        cmbFilterByTopUsersMain.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "None", "Active", "Blocked" }));
        cmbFilterByTopUsersMain.setFocusable(false);
        cmbFilterByTopUsersMain.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbFilterByTopUsersMainActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlTopUsersMainLayout = new javax.swing.GroupLayout(pnlTopUsersMain);
        pnlTopUsersMain.setLayout(pnlTopUsersMainLayout);
        pnlTopUsersMainLayout.setHorizontalGroup(
            pnlTopUsersMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlTopUsersMainLayout.createSequentialGroup()
                .addComponent(lblUsersManagementTopUsersMain)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lblFilterByTopUsersMain)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cmbFilterByTopUsersMain, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(lblSortByTopUsersMain)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cmbSortByTopUsersMain, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20))
        );
        pnlTopUsersMainLayout.setVerticalGroup(
            pnlTopUsersMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lblUsersManagementTopUsersMain, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlTopUsersMainLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlTopUsersMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblSortByTopUsersMain, javax.swing.GroupLayout.DEFAULT_SIZE, 38, Short.MAX_VALUE)
                    .addComponent(lblFilterByTopUsersMain, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(cmbSortByTopUsersMain, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmbFilterByTopUsersMain, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        pnlColumnNameUsersMain.setBackground(new java.awt.Color(255, 255, 255));
        pnlColumnNameUsersMain.setBorder(javax.swing.BorderFactory.createEmptyBorder(5, 0, 5, 10));
        pnlColumnNameUsersMain.setPreferredSize(new java.awt.Dimension(0, 50));
        pnlColumnNameUsersMain.setLayout(new java.awt.GridBagLayout());

        pnlRowHeaderColumnNameUsersMain.setBackground(new java.awt.Color(255, 255, 255));
        pnlRowHeaderColumnNameUsersMain.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)), javax.swing.BorderFactory.createEmptyBorder(0, 25, 0, 0)));
        pnlRowHeaderColumnNameUsersMain.setPreferredSize(new java.awt.Dimension(0, 0));
        pnlRowHeaderColumnNameUsersMain.setLayout(new java.awt.GridBagLayout());

        lblIdRowHeaderColumnNameUsersMain.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        lblIdRowHeaderColumnNameUsersMain.setForeground(new java.awt.Color(51, 51, 51));
        lblIdRowHeaderColumnNameUsersMain.setText("ID");
        lblIdRowHeaderColumnNameUsersMain.setPreferredSize(new java.awt.Dimension(0, 0));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.2;
        gridBagConstraints.weighty = 1.0;
        pnlRowHeaderColumnNameUsersMain.add(lblIdRowHeaderColumnNameUsersMain, gridBagConstraints);

        lblFullnameRowHeaderColumnNameUsersMain.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        lblFullnameRowHeaderColumnNameUsersMain.setForeground(new java.awt.Color(51, 51, 51));
        lblFullnameRowHeaderColumnNameUsersMain.setText("Fullname");
        lblFullnameRowHeaderColumnNameUsersMain.setPreferredSize(new java.awt.Dimension(0, 0));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        pnlRowHeaderColumnNameUsersMain.add(lblFullnameRowHeaderColumnNameUsersMain, gridBagConstraints);

        lblUsernameRowHeaderColumnNameUsersMain.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        lblUsernameRowHeaderColumnNameUsersMain.setForeground(new java.awt.Color(51, 51, 51));
        lblUsernameRowHeaderColumnNameUsersMain.setText("Username");
        lblUsernameRowHeaderColumnNameUsersMain.setPreferredSize(new java.awt.Dimension(0, 0));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        pnlRowHeaderColumnNameUsersMain.add(lblUsernameRowHeaderColumnNameUsersMain, gridBagConstraints);

        lblEmailRowHeaderColumnNameUsersMain.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        lblEmailRowHeaderColumnNameUsersMain.setForeground(new java.awt.Color(51, 51, 51));
        lblEmailRowHeaderColumnNameUsersMain.setText("Email");
        lblEmailRowHeaderColumnNameUsersMain.setPreferredSize(new java.awt.Dimension(0, 0));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        pnlRowHeaderColumnNameUsersMain.add(lblEmailRowHeaderColumnNameUsersMain, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        pnlColumnNameUsersMain.add(pnlRowHeaderColumnNameUsersMain, gridBagConstraints);

        pnlEmptyColumnNameUsersMain.setBackground(new java.awt.Color(255, 255, 255));
        pnlEmptyColumnNameUsersMain.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255), 2));
        pnlEmptyColumnNameUsersMain.setPreferredSize(new java.awt.Dimension(0, 0));

        javax.swing.GroupLayout pnlEmptyColumnNameUsersMainLayout = new javax.swing.GroupLayout(pnlEmptyColumnNameUsersMain);
        pnlEmptyColumnNameUsersMain.setLayout(pnlEmptyColumnNameUsersMainLayout);
        pnlEmptyColumnNameUsersMainLayout.setHorizontalGroup(
            pnlEmptyColumnNameUsersMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 48, Short.MAX_VALUE)
        );
        pnlEmptyColumnNameUsersMainLayout.setVerticalGroup(
            pnlEmptyColumnNameUsersMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 36, Short.MAX_VALUE)
        );

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.weighty = 1.0;
        pnlColumnNameUsersMain.add(pnlEmptyColumnNameUsersMain, gridBagConstraints);

        scrColumnValueUsersMain.setBorder(null);
        scrColumnValueUsersMain.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);

        pnlColumnValueUsersMain.setBackground(new java.awt.Color(243, 242, 241));
        pnlColumnValueUsersMain.setLayout(new java.awt.GridBagLayout());
        scrColumnValueUsersMain.setViewportView(pnlColumnValueUsersMain);

        javax.swing.GroupLayout pnlUsersMainLayout = new javax.swing.GroupLayout(pnlUsersMain);
        pnlUsersMain.setLayout(pnlUsersMainLayout);
        pnlUsersMainLayout.setHorizontalGroup(
            pnlUsersMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlTopUsersMain, javax.swing.GroupLayout.DEFAULT_SIZE, 1116, Short.MAX_VALUE)
            .addComponent(scrColumnValueUsersMain)
            .addComponent(pnlColumnNameUsersMain, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        pnlUsersMainLayout.setVerticalGroup(
            pnlUsersMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlUsersMainLayout.createSequentialGroup()
                .addComponent(pnlTopUsersMain, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnlColumnNameUsersMain, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(scrColumnValueUsersMain, javax.swing.GroupLayout.DEFAULT_SIZE, 18, Short.MAX_VALUE))
        );

        pnlMain.add(pnlUsersMain, "Users");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(pnlSide, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(pnlMain, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(pnlTop, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(pnlTop, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pnlMain, javax.swing.GroupLayout.DEFAULT_SIZE, 664, Short.MAX_VALUE)
                    .addComponent(pnlSide, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void pnlSigninOrUserTopMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnlSigninOrUserTopMouseMoved
        // TODO add your handling code here:
        pnlSigninOrUserTop.setBackground(MOUSE_MOVED_BTN_COLOR);
    }//GEN-LAST:event_pnlSigninOrUserTopMouseMoved

    private void pnlSigninOrUserTopMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnlSigninOrUserTopMouseExited
        // TODO add your handling code here:
        pnlSigninOrUserTop.setBackground(MOUSE_EXITED_BTN_COLOR);
    }//GEN-LAST:event_pnlSigninOrUserTopMouseExited

    private void pnlListViewTitleHomeMainMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnlListViewTitleHomeMainMouseMoved
        // TODO add your handling code here:
        pnlListViewTitleHomeMain.setBackground(MOUSE_MOVED_PNL_COLOR);
    }//GEN-LAST:event_pnlListViewTitleHomeMainMouseMoved

    private void pnlListViewTitleHomeMainMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnlListViewTitleHomeMainMouseExited
        // TODO add your handling code here:
        pnlListViewTitleHomeMain.setBackground(MOUSE_EXITED_PNL_COLOR);
    }//GEN-LAST:event_pnlListViewTitleHomeMainMouseExited

    private void pnlCardViewTitleHomeMainMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnlCardViewTitleHomeMainMouseMoved
        // TODO add your handling code here:
        pnlCardViewTitleHomeMain.setBackground(MOUSE_MOVED_PNL_COLOR);
    }//GEN-LAST:event_pnlCardViewTitleHomeMainMouseMoved

    private void pnlCardViewTitleHomeMainMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnlCardViewTitleHomeMainMouseExited
        // TODO add your handling code here:
        pnlCardViewTitleHomeMain.setBackground(MOUSE_EXITED_PNL_COLOR);
    }//GEN-LAST:event_pnlCardViewTitleHomeMainMouseExited

    private void pnlListViewTitleHomeMainMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnlListViewTitleHomeMainMousePressed
        // TODO add your handling code here:
        ((CardLayout) pnlViewHomeMain.getLayout()).show(pnlViewHomeMain, "ListView");
    }//GEN-LAST:event_pnlListViewTitleHomeMainMousePressed

    private void pnlCardViewTitleHomeMainMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnlCardViewTitleHomeMainMousePressed
        // TODO add your handling code here:
        ((CardLayout) pnlViewHomeMain.getLayout()).show(pnlViewHomeMain, "CardView");
    }//GEN-LAST:event_pnlCardViewTitleHomeMainMousePressed

    private void pnlSigninOrUserTopMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnlSigninOrUserTopMousePressed
        // TODO add your handling code here:
        if (MyApplication.getPersonSignIn() == null) {
            Signin dialog = new Signin(new javax.swing.JFrame(), true);
            boolean signinSuccess = dialog.showDialog();
            if (signinSuccess) {
                signin();
            }
        } else {
            PersonDialog personDialog = new PersonDialog(new javax.swing.JFrame(), true, MyApplication.getPersonSignIn());
            int request = personDialog.showDialog();
            if (request == PersonDialog.SIGNOUT_REQUEST) {
                signout();
            } else if (request == PersonDialog.PROFILE_REQUEST) {
                Profile profileDialog = new Profile(new JFrame(), true, MyApplication.getPersonSignIn());
                boolean isEdit = profileDialog.showDialog();
                if (isEdit) {
                    Person person = MyApplication.getPersonSignIn();
                    lblSigninOrUserTop.setText(person.getFullname());
                }
            }
        }

    }//GEN-LAST:event_pnlSigninOrUserTopMousePressed

    private void signin() {
        Person person = MyApplication.getPersonSignIn();
        lblSigninOrUserTop.setText(person.getFullname());
        if (person.getTypePerson() == USER_TYPE) {
            userMode();
        } else {
            adminMode();
        }
    }

    private void signout() {
        guessMode();
    }

    private void pnlHomeSideMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnlHomeSideMousePressed
        // TODO add your handling code here:
        ((CardLayout) pnlMain.getLayout()).show(pnlMain, "Home");
        pnlHomeSide.setBackground(MOUSE_PRESSED_PNL_COLOR_2);
        pnlYourConferencesSide.setBackground(MOUSE_EXITED_PNL_COLOR_2);
        pnlManagementSide.setBackground(MOUSE_EXITED_PNL_COLOR_2);
        pnlUsersSide.setBackground(MOUSE_EXITED_PNL_COLOR_2);
    }//GEN-LAST:event_pnlHomeSideMousePressed

    private void pnlYourConferencesSideMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnlYourConferencesSideMousePressed
        // TODO add your handling code here:
        ((CardLayout) pnlMain.getLayout()).show(pnlMain, "YourConferences");
        pnlHomeSide.setBackground(MOUSE_EXITED_PNL_COLOR_2);
        pnlYourConferencesSide.setBackground(MOUSE_PRESSED_PNL_COLOR_2);
        pnlManagementSide.setBackground(MOUSE_EXITED_PNL_COLOR_2);
        pnlUsersSide.setBackground(MOUSE_EXITED_PNL_COLOR_2);
    }//GEN-LAST:event_pnlYourConferencesSideMousePressed

    private void pnlManagementSideMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnlManagementSideMousePressed
        // TODO add your handling code here:
        ((CardLayout) pnlMain.getLayout()).show(pnlMain, "Management");
        pnlHomeSide.setBackground(MOUSE_EXITED_PNL_COLOR_2);
        pnlYourConferencesSide.setBackground(MOUSE_EXITED_PNL_COLOR_2);
        pnlManagementSide.setBackground(MOUSE_PRESSED_PNL_COLOR_2);
        pnlUsersSide.setBackground(MOUSE_EXITED_PNL_COLOR_2);
    }//GEN-LAST:event_pnlManagementSideMousePressed

    private void pnlCreateConferenceTopManagementMainMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnlCreateConferenceTopManagementMainMouseMoved
        // TODO add your handling code here:
        pnlCreateConferenceTopManagementMain.setBackground(MOUSE_MOVED_PNL_COLOR);
    }//GEN-LAST:event_pnlCreateConferenceTopManagementMainMouseMoved

    private void pnlCreateConferenceTopManagementMainMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnlCreateConferenceTopManagementMainMouseExited
        // TODO add your handling code here:
        pnlCreateConferenceTopManagementMain.setBackground(MOUSE_EXITED_PNL_COLOR_3);
    }//GEN-LAST:event_pnlCreateConferenceTopManagementMainMouseExited

    private void pnlCreateConferenceTopManagementMainMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnlCreateConferenceTopManagementMainMousePressed
        // TODO add your handling code here:
        ManageConference createNewConferenceDialog = new ManageConference(new JFrame(), true, ManageConference.CREATE_NEW_CONFERENCE);
        boolean addConferenceSuccessfully = createNewConferenceDialog.showDiaglog();
        if (addConferenceSuccessfully) {
            updateAdminUi();
            validate();
        }
    }//GEN-LAST:event_pnlCreateConferenceTopManagementMainMousePressed

    private void pnlCardViewTopYourConferencesMainMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnlCardViewTopYourConferencesMainMousePressed
        // TODO add your handling code here:
        ((CardLayout) pnlDataYourConferencesMain.getLayout()).show(pnlDataYourConferencesMain, "CardViewYourConferences");
    }//GEN-LAST:event_pnlCardViewTopYourConferencesMainMousePressed

    private void pnlCardViewTopYourConferencesMainMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnlCardViewTopYourConferencesMainMouseExited
        // TODO add your handling code here:
        pnlCardViewTopYourConferencesMain.setBackground(MOUSE_EXITED_PNL_COLOR_3);
    }//GEN-LAST:event_pnlCardViewTopYourConferencesMainMouseExited

    private void pnlCardViewTopYourConferencesMainMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnlCardViewTopYourConferencesMainMouseMoved
        // TODO add your handling code here:
        pnlCardViewTopYourConferencesMain.setBackground(MOUSE_MOVED_PNL_COLOR);
    }//GEN-LAST:event_pnlCardViewTopYourConferencesMainMouseMoved

    private void pnlListViewTopYourConferencesMainMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnlListViewTopYourConferencesMainMousePressed
        // TODO add your handling code here:
        ((CardLayout) pnlDataYourConferencesMain.getLayout()).show(pnlDataYourConferencesMain, "ListViewYourConferences");
    }//GEN-LAST:event_pnlListViewTopYourConferencesMainMousePressed

    private void pnlListViewTopYourConferencesMainMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnlListViewTopYourConferencesMainMouseExited
        // TODO add your handling code here:
        pnlListViewTopYourConferencesMain.setBackground(MOUSE_EXITED_PNL_COLOR_3);
    }//GEN-LAST:event_pnlListViewTopYourConferencesMainMouseExited

    private void pnlListViewTopYourConferencesMainMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnlListViewTopYourConferencesMainMouseMoved
        // TODO add your handling code here:
        pnlListViewTopYourConferencesMain.setBackground(MOUSE_MOVED_PNL_COLOR);
    }//GEN-LAST:event_pnlListViewTopYourConferencesMainMouseMoved

    private void pnlEnrollBasicInfoMainDetailConferenceMainMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnlEnrollBasicInfoMainDetailConferenceMainMousePressed
        // TODO add your handling code here:
        if (MyApplication.getPersonSignIn() == null) {
            EnrollError enrollErrorDialog = new EnrollError(new JFrame(), true);
            int action = enrollErrorDialog.showDialog();
            if (action == EnrollError.ACTION_SIGNIN) {
                Signin dialog = new Signin(new javax.swing.JFrame(), true);
                boolean signinSuccess = dialog.showDialog();
                if (signinSuccess) {
                    signin();
                    showPnlDetailConferenceMain(MyApplication.getCurShowDetailConference());
                    if (RegisteredConferenceBUS.isExist(MyApplication.getCurShowDetailConference(), MyApplication.getPersonSignIn())) {
                        Success successDialog = new Success(new JFrame(), true, ENROLL_SUCCESSFULLY_MSG_1);
                        successDialog.showDialog();
                    } else if (RegisteringConferenceBUS.isExist(MyApplication.getCurShowDetailConference(), MyApplication.getPersonSignIn())) {
                        Success successDialog = new Success(new JFrame(), true, ENROLL_SUCCESSFULLY_MSG_2);
                        successDialog.showDialog();
                    } else {
                        List<String> errors = new ArrayList<>();
                        RegisteringConference registeringConference = new RegisteringConference();
                        registeringConference.setPerson(MyApplication.getPersonSignIn());
                        registeringConference.setConference(MyApplication.getCurShowDetailConference());
                        boolean enrollSuccess = RegisteringConferenceBUS.add(registeringConference, errors);
                        if (enrollSuccess) {
                            Success successDialog = new Success(new JFrame(), true, ENROLL_SUCCESSFULLY_MSG);
                            successDialog.showDialog();
                            updateUserUi();
                        } else {
                            Error errorDialog = new Error(new JFrame(), true, errors);
                            errorDialog.showDialog();
                        }
                        showPnlDetailConferenceMain(MyApplication.getCurShowDetailConference());
                    }
                    //showPnlDetailConferenceMain(MyApplication.getCurShowDetailConference());
                }
            } else if (action == EnrollError.ACTION_SIGNUP) {
                Signup signupDialog = new Signup(new javax.swing.JFrame(), true);
                String[] userData = signupDialog.showDialog();
                String username = userData[0];
                String password = userData[1];
                if (username != null && password != null) {
                    Signin signinDialog = new Signin(new JFrame(), true);
                    signinDialog.setData(username, password);
                    boolean signinSuccess = signinDialog.showDialog();
                    if (signinSuccess) {
                        signin();
                        showPnlDetailConferenceMain(MyApplication.getCurShowDetailConference());
                        List<String> errors = new ArrayList<>();
                        RegisteringConference registeringConference = new RegisteringConference();
                        registeringConference.setPerson(MyApplication.getPersonSignIn());
                        registeringConference.setConference(MyApplication.getCurShowDetailConference());
                        boolean enrollSuccess = RegisteringConferenceBUS.add(registeringConference, errors);
                        if (enrollSuccess) {
                            Success successDialog = new Success(new JFrame(), true, ENROLL_SUCCESSFULLY_MSG);
                            successDialog.showDialog();
                            updateUserUi();
                        } else {
                            Error errorDialog = new Error(new JFrame(), true, errors);
                            errorDialog.showDialog();
                        }
                        showPnlDetailConferenceMain(MyApplication.getCurShowDetailConference());
                    }
                }
            }
        } else if (MyApplication.getCurShowDetailConference() != null) {
            RegisteringConference registeringConference = new RegisteringConference();
            registeringConference.setPerson(MyApplication.getPersonSignIn());
            registeringConference.setConference(MyApplication.getCurShowDetailConference());
            List<String> errors = new ArrayList<>();
            boolean isSuccess = RegisteringConferenceBUS.add(registeringConference, errors);
            if (isSuccess) {
                Success successDialog = new Success(new JFrame(), true, ENROLL_SUCCESSFULLY_MSG);
                successDialog.showDialog();
//                pnlEnrollBasicInfoMainDetailConferenceMain.setVisible(false);
//                lblAnnouBasicInfoMainDetailConferenceMain.setText(ENROLLING_CONFERENCE);
                showPnlDetailConferenceMain(MyApplication.getCurShowDetailConference());
                if (MyApplication.getPersonSignIn().getTypePerson() == ADMIN_TYPE) {
                    updateAdminUi();
                } else if (MyApplication.getPersonSignIn().getTypePerson() == USER_TYPE) {
                    updateUserUi();
                }
            } else {
                Error errorDialog = new Error(new JFrame(), true, errors);
                errorDialog.showDialog();
            }
        }

    }//GEN-LAST:event_pnlEnrollBasicInfoMainDetailConferenceMainMousePressed

    private void pnlEnrollBasicInfoMainDetailConferenceMainMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnlEnrollBasicInfoMainDetailConferenceMainMouseMoved
        // TODO add your handling code here:
        pnlEnrollBasicInfoMainDetailConferenceMain.setBackground(Signin.MOUSE_MOVED_BTN_COLOR);
    }//GEN-LAST:event_pnlEnrollBasicInfoMainDetailConferenceMainMouseMoved

    private void pnlEnrollBasicInfoMainDetailConferenceMainMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnlEnrollBasicInfoMainDetailConferenceMainMouseExited
        // TODO add your handling code here:
        pnlEnrollBasicInfoMainDetailConferenceMain.setBackground(Signin.MOUSE_EXITED_BTN_COLOR);
    }//GEN-LAST:event_pnlEnrollBasicInfoMainDetailConferenceMainMouseExited

    private void pnlUsersSideMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnlUsersSideMousePressed
        // TODO add your handling code here:
        ((CardLayout) pnlMain.getLayout()).show(pnlMain, "Users");
        pnlHomeSide.setBackground(MOUSE_EXITED_PNL_COLOR_2);
        pnlYourConferencesSide.setBackground(MOUSE_EXITED_PNL_COLOR_2);
        pnlManagementSide.setBackground(MOUSE_EXITED_PNL_COLOR_2);
        pnlUsersSide.setBackground(MOUSE_PRESSED_PNL_COLOR_2);
    }//GEN-LAST:event_pnlUsersSideMousePressed

    private void cmbSortByTopUsersMainActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbSortByTopUsersMainActionPerformed
        // TODO add your handling code here:
        JComboBox cmb = (JComboBox) evt.getSource();
        int sortType = cmb.getSelectedIndex();
        sortPeopleAndUpdateUi(sortType);
    }//GEN-LAST:event_cmbSortByTopUsersMainActionPerformed

    private void cmbFilterByTopUsersMainActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbFilterByTopUsersMainActionPerformed
        // TODO add your handling code here:
        JComboBox cmb = (JComboBox) evt.getSource();
        int filterType = cmb.getSelectedIndex();
        int sortType = cmbSortByTopUsersMain.getSelectedIndex();
        filterPeopleAndUpdateUi(filterType, sortType);
    }//GEN-LAST:event_cmbFilterByTopUsersMainActionPerformed

    private void cmbSearchByTopYourConferencesMainActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbSearchByTopYourConferencesMainActionPerformed
        // TODO add your handling code here:
        String keyword = txtSearchTopYourConferencesMain.getText().trim();
        int searchBy = cmbSearchByTopYourConferencesMain.getSelectedIndex();
        int sortBy = cmbSortByTopYourConferencesMain.getSelectedIndex();
        searchRegisterdConferencesOfPersonAndUpdateUi(MyApplication.getPersonSignIn(), keyword, searchBy, sortBy);
    }//GEN-LAST:event_cmbSearchByTopYourConferencesMainActionPerformed

    private void txtSearchTopYourConferencesMainKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSearchTopYourConferencesMainKeyReleased
        // TODO add your handling code here:
        String keyword = txtSearchTopYourConferencesMain.getText().trim();
        int searchBy = cmbSearchByTopYourConferencesMain.getSelectedIndex();
        int sortBy = cmbSortByTopYourConferencesMain.getSelectedIndex();
        searchRegisterdConferencesOfPersonAndUpdateUi(MyApplication.getPersonSignIn(), keyword, searchBy, sortBy);
    }//GEN-LAST:event_txtSearchTopYourConferencesMainKeyReleased

    private void cmbSortByTopYourConferencesMainActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbSortByTopYourConferencesMainActionPerformed
        // TODO add your handling code here:
        int sortBy = cmbSortByTopYourConferencesMain.getSelectedIndex();
        sortRegisteredConferenceOfPersonAndUpdateUi(MyApplication.getPersonSignIn(), sortBy);
    }//GEN-LAST:event_cmbSortByTopYourConferencesMainActionPerformed

    private void guessMode() {
        MyApplication.setPersonSignIn(null);

        pnlHomeSide.setVisible(true);
        pnlHomeSideMousePressed(null);

        pnlYourConferencesSide.setVisible(false);
        pnlManagementSide.setVisible(false);
        pnlUsersSide.setVisible(false);

        updateGuessUi();
    }

    private void userMode() {
        pnlHomeSide.setVisible(true);
        pnlHomeSideMousePressed(null);

        pnlYourConferencesSide.setVisible(true);
        pnlManagementSide.setVisible(false);
        pnlUsersSide.setVisible(false);

        updateUserUi();
    }

    private void adminMode() {
        pnlHomeSide.setVisible(true);
        pnlHomeSideMousePressed(null);

        pnlYourConferencesSide.setVisible(true);
        pnlManagementSide.setVisible(true);
        pnlUsersSide.setVisible(true);

        updateAdminUi();
    }

    private void alignAllCloumnName() {
        pnlColumnNameUsersMain.setBorder(
                new EmptyBorder(5, 0, 5, 10 + scrColumnValueUsersMain.getVerticalScrollBar().getWidth()));
        pnlColumnNameListViewHomeMain.setBorder(
                new EmptyBorder(0, 25, 0, scrColumnValueListViewHomeMain.getVerticalScrollBar().getWidth()));
        pnlColumnNameListViewDataYourConferencesMain.setBorder(
                new EmptyBorder(0, 0, 0, scrColumnValueListViewDataYourConferencesMain.getVerticalScrollBar().getWidth()));
        pnlColumnNameManagementMain.setBorder(
                new EmptyBorder(0, 0, 0, scrColumnValueManagementMain.getVerticalScrollBar().getWidth()));
    }

    public void fillPnlViewHomeMain() {
        pnlColumnValueListViewHomeMain.removeAll();
        pnlContentCardViewHomeMain.removeAll();
        List<Conference> availableConferences = ConferenceBUS.getAllAvailableConferences();
        int col = 3;
        int curCol = 0;
        JPanel pnlContain = new JPanel();
        GridBagConstraints gbc1 = new GridBagConstraints();
        gbc1.weightx = 1;
        gbc1.fill = GridBagConstraints.HORIZONTAL;
        gbc1.gridwidth = GridBagConstraints.REMAINDER;
        for (int i = 0; i < availableConferences.size(); i++) {
            ListViewItem01 pnlListViewItem = new ListViewItem01(availableConferences.get(i));
            pnlListViewItem.setVisible(true);
            pnlColumnValueListViewHomeMain.add(pnlListViewItem, gbc1);

            CardViewItem pnlCardViewItem = new CardViewItem(availableConferences.get(i));
            if (curCol == 0) {
                pnlContain = new JPanel();
                pnlContain.setSize(pnlCardViewItem.getWidth(), pnlCardViewItem.getHeight());
                pnlContain.setLayout(new FlowLayout(FlowLayout.LEFT));
            }
            pnlContain.add(pnlCardViewItem);
            curCol++;
            if (curCol == col) {
                curCol = 0;
                pnlContentCardViewHomeMain.add(pnlContain, gbc1);
            }
        }
        GridBagConstraints gbc2 = new GridBagConstraints();
        gbc2.weightx = 1;
        gbc2.weighty = 1;
        pnlColumnValueListViewHomeMain.add(new Panel(), gbc2);
        if (curCol < col) {
            pnlContentCardViewHomeMain.add(pnlContain, gbc1);
        }
        pnlContentCardViewHomeMain.add(new Panel(), gbc2);
    }

    public void fillPnlColumnValueManagementMain() {
        pnlColumnValueManagementMain.removeAll();
        List<Conference> conferences = ConferenceBUS.getAll();
        if (conferences.isEmpty()) {
            pnlColumnValueManagementMain.repaint();
            return;
        }
        for (int i = 0; i < conferences.size(); i++) {
            ConferenceItem pnlConferenceItem = new ConferenceItem(conferences.get(i));
            GridBagConstraints gbc = new GridBagConstraints();
            gbc.weightx = 1;
            gbc.fill = GridBagConstraints.HORIZONTAL;
            gbc.gridwidth = GridBagConstraints.REMAINDER;
            pnlConferenceItem.setVisible(true);
            pnlColumnValueManagementMain.add(pnlConferenceItem, gbc);
        }
        GridBagConstraints gbc = new GridBagConstraints();
        gbc.weightx = 1;
        gbc.weighty = 1;
        pnlColumnValueManagementMain.add(new Panel(), gbc);
        pnlColumnValueManagementMain.revalidate();
    }

    public static final int SEARCH_BY_CONFERENCE_NAME = 0, SEARCH_BY_CONFERENCE_ADDRESS = 1;
    public static final int SORT_BY_CONFERENCE_NAME = 0, SORT_BY_CONFERENCE_TIME_START = 1;
    private List<RegisteredConference> registeredConferencesOfPerson = null;

    public void fillPnlDataYourConferencesMain() {
        if (MyApplication.getPersonSignIn() != null) {
            String keyword = txtSearchTopYourConferencesMain.getText().trim();
            int searchBy = cmbSearchByTopYourConferencesMain.getSelectedIndex();
            int sortBy = cmbSortByTopYourConferencesMain.getSelectedIndex();
            searchRegisteredConferenceOfPerson(MyApplication.getPersonSignIn(), keyword, searchBy);
            sortRegisteredConferenceOfPerson(MyApplication.getPersonSignIn(), sortBy);
            pnlColumnValueListViewDataYourConferencesMain.removeAll();
            pnlValueCardViewDataYourConferencesMain.removeAll();
            if (registeredConferencesOfPerson.isEmpty()) {
                pnlColumnValueListViewDataYourConferencesMain.repaint();
                pnlValueCardViewDataYourConferencesMain.repaint();
                return;
            }
            int col = 3;
            int curCol = 0;
            JPanel pnlContain = new JPanel();
            GridBagConstraints gbc1 = new GridBagConstraints();
            gbc1.weightx = 1;
            gbc1.fill = GridBagConstraints.HORIZONTAL;
            gbc1.gridwidth = GridBagConstraints.REMAINDER;
            for (int i = 0; i < registeredConferencesOfPerson.size(); i++) {
                ListViewItem02 pnlListViewItem = new ListViewItem02(registeredConferencesOfPerson.get(i).getConference());
                pnlListViewItem.setVisible(true);
                pnlColumnValueListViewDataYourConferencesMain.add(pnlListViewItem, gbc1);
                CardViewItem pnlCardViewItem = new CardViewItem(registeredConferencesOfPerson.get(i).getConference());
                if (curCol == 0) {
                    pnlContain = new JPanel();
                    pnlContain.setSize(pnlCardViewItem.getWidth(), pnlCardViewItem.getHeight());
                    pnlContain.setLayout(new FlowLayout(FlowLayout.LEFT));
                }
                pnlContain.add(pnlCardViewItem);
                curCol++;
                if (curCol == col) {
                    curCol = 0;
                    pnlValueCardViewDataYourConferencesMain.add(pnlContain, gbc1);
                }
            }
            GridBagConstraints gbc2 = new GridBagConstraints();
            gbc2.weightx = 1;
            gbc2.weighty = 1;
            pnlColumnValueListViewDataYourConferencesMain.add(new Panel(), gbc2);
            if (curCol < col) {
                pnlValueCardViewDataYourConferencesMain.add(pnlContain, gbc1);
            }
            pnlValueCardViewDataYourConferencesMain.add(new Panel(), gbc2);

            pnlColumnValueListViewDataYourConferencesMain.revalidate();
            pnlValueCardViewDataYourConferencesMain.revalidate();
            pnlColumnValueListViewDataYourConferencesMain.repaint();
            pnlValueCardViewDataYourConferencesMain.repaint();
        }
    }

    private void searchRegisteredConferenceOfPerson(Person person, String keyword, int searchBy) {
        if (keyword.length() == 0) {
            registeredConferencesOfPerson = RegisteredConferenceBUS.getRegisteredConferencesOfPerson(person);
        } else {
            switch (searchBy) {
                case SEARCH_BY_CONFERENCE_NAME:
                    registeredConferencesOfPerson = RegisteredConferenceBUS.searchByConferenceNameOfPerson(person, keyword);
                    break;
                case SEARCH_BY_CONFERENCE_ADDRESS:
                    registeredConferencesOfPerson = RegisteredConferenceBUS.searchByConferenceAddressOfPerson(person, keyword);
                    break;
            }
        }
    }

    private void searchRegisterdConferencesOfPersonAndUpdateUi(Person person, String keyword, int searchBy, int sortBy) {
        searchRegisteredConferenceOfPerson(person, keyword, searchBy);
        sortRegisteredConferenceOfPerson(person, sortBy);
        pnlColumnValueListViewDataYourConferencesMain.removeAll();
        pnlValueCardViewDataYourConferencesMain.removeAll();
        if (registeredConferencesOfPerson.isEmpty()) {
            pnlColumnValueListViewDataYourConferencesMain.repaint();
            pnlValueCardViewDataYourConferencesMain.repaint();
            return;
        }
        int col = 3;
        int curCol = 0;
        JPanel pnlContain = new JPanel();
        GridBagConstraints gbc1 = new GridBagConstraints();
        gbc1.weightx = 1;
        gbc1.fill = GridBagConstraints.HORIZONTAL;
        gbc1.gridwidth = GridBagConstraints.REMAINDER;
        for (int i = 0; i < registeredConferencesOfPerson.size(); i++) {
            ListViewItem02 pnlListViewItem = new ListViewItem02(registeredConferencesOfPerson.get(i).getConference());
            pnlListViewItem.setVisible(true);
            pnlColumnValueListViewDataYourConferencesMain.add(pnlListViewItem, gbc1);
            CardViewItem pnlCardViewItem = new CardViewItem(registeredConferencesOfPerson.get(i).getConference());
            if (curCol == 0) {
                pnlContain = new JPanel();
                pnlContain.setSize(pnlCardViewItem.getWidth(), pnlCardViewItem.getHeight());
                pnlContain.setLayout(new FlowLayout(FlowLayout.LEFT));
            }
            pnlContain.add(pnlCardViewItem);
            curCol++;
            if (curCol == col) {
                curCol = 0;
                pnlValueCardViewDataYourConferencesMain.add(pnlContain, gbc1);
            }
        }
        GridBagConstraints gbc2 = new GridBagConstraints();
        gbc2.weightx = 1;
        gbc2.weighty = 1;
        pnlColumnValueListViewDataYourConferencesMain.add(new Panel(), gbc2);
        if (curCol < col) {
            pnlValueCardViewDataYourConferencesMain.add(pnlContain, gbc1);
        }
        pnlValueCardViewDataYourConferencesMain.add(new Panel(), gbc2);
        pnlColumnValueListViewDataYourConferencesMain.revalidate();
        pnlValueCardViewDataYourConferencesMain.revalidate();
    }

    private void sortRegisteredConferenceOfPerson(Person person, int sortBy) {
        switch (sortBy) {
            case SORT_BY_CONFERENCE_NAME:
                Collections.sort(registeredConferencesOfPerson, new Comparator<RegisteredConference>() {
                    @Override
                    public int compare(RegisteredConference arg0, RegisteredConference arg1) {
                        return arg0.getConference().getNameConference().compareTo(arg1.getConference().getNameConference());
                    }
                });
                break;
            case SORT_BY_CONFERENCE_TIME_START:
                Collections.sort(registeredConferencesOfPerson, new Comparator<RegisteredConference>() {
                    @Override
                    public int compare(RegisteredConference arg0, RegisteredConference arg1) {
                        return arg0.getConference().getTimeStart().compareTo(arg1.getConference().getTimeStart());
                    }

                });
                break;
        }
    }

    private void sortRegisteredConferenceOfPersonAndUpdateUi(Person person, int sortBy) {
        sortRegisteredConferenceOfPerson(person, sortBy);
        if (registeredConferencesOfPerson.isEmpty()) {
            pnlColumnValueListViewDataYourConferencesMain.repaint();
            pnlValueCardViewDataYourConferencesMain.repaint();
            return;
        }
        pnlColumnValueListViewDataYourConferencesMain.removeAll();
        pnlValueCardViewDataYourConferencesMain.removeAll();
        int col = 3;
        int curCol = 0;
        JPanel pnlContain = new JPanel();
        GridBagConstraints gbc1 = new GridBagConstraints();
        gbc1.weightx = 1;
        gbc1.fill = GridBagConstraints.HORIZONTAL;
        gbc1.gridwidth = GridBagConstraints.REMAINDER;
        for (int i = 0; i < registeredConferencesOfPerson.size(); i++) {
            ListViewItem02 pnlListViewItem = new ListViewItem02(registeredConferencesOfPerson.get(i).getConference());
            pnlListViewItem.setVisible(true);
            pnlColumnValueListViewDataYourConferencesMain.add(pnlListViewItem, gbc1);
            CardViewItem pnlCardViewItem = new CardViewItem(registeredConferencesOfPerson.get(i).getConference());
            if (curCol == 0) {
                pnlContain = new JPanel();
                pnlContain.setSize(pnlCardViewItem.getWidth(), pnlCardViewItem.getHeight());
                pnlContain.setLayout(new FlowLayout(FlowLayout.LEFT));
            }
            pnlContain.add(pnlCardViewItem);
            curCol++;
            if (curCol == col) {
                curCol = 0;
                pnlValueCardViewDataYourConferencesMain.add(pnlContain, gbc1);
            }
        }
        GridBagConstraints gbc2 = new GridBagConstraints();
        gbc2.weightx = 1;
        gbc2.weighty = 1;
        pnlColumnValueListViewDataYourConferencesMain.add(new Panel(), gbc2);
        if (curCol < col) {
            pnlValueCardViewDataYourConferencesMain.add(pnlContain, gbc1);
        }
        pnlValueCardViewDataYourConferencesMain.add(new Panel(), gbc2);
        pnlColumnValueListViewDataYourConferencesMain.revalidate();
        pnlValueCardViewDataYourConferencesMain.revalidate();
    }

    private List<Person> people = null;
    private List<Person> peopleForView = null;
    public static final int SORT_ID = 0, SORT_FULLNAME = 1, SORT_USERNAME = 2, SORT_EMAIL = 3;
    public static final int FILTER_NONE = 0, FILTER_ACTIVE = 1, FILTER_BLOCKED = 2;

    public void fillPnlColumnValueUsersMain() {
        people = PersonBUS.getAllUsers();
        int filterType = cmbFilterByTopUsersMain.getSelectedIndex();
        int sortType = cmbSortByTopUsersMain.getSelectedIndex();
        filterPeople(filterType);
        sortPeople(sortType);
        pnlColumnValueUsersMain.removeAll();
        if (peopleForView.isEmpty()) {
            pnlColumnValueUsersMain.repaint();
        }
        for (int i = 0; i < peopleForView.size(); i++) {
            PersonItem personItemPnl = new PersonItem(peopleForView.get(i));
            personItemPnl.setVisible(true);
            GridBagConstraints gbc1 = new GridBagConstraints();
            gbc1.weightx = 1;
            gbc1.fill = GridBagConstraints.HORIZONTAL;
            gbc1.gridwidth = GridBagConstraints.REMAINDER;
            pnlColumnValueUsersMain.add(personItemPnl, gbc1);
        }
        GridBagConstraints gbc2 = new GridBagConstraints();
        gbc2.weightx = 1;
        gbc2.weighty = 1;
        pnlColumnValueUsersMain.add(new Panel(), gbc2);
        pnlColumnValueUsersMain.revalidate();
    }

    private void filterPeople(int filterType) {
        if (people == null) {
            return;
        }
        switch (filterType) {
            case FILTER_NONE:
                peopleForView = new ArrayList<>(people);
                break;
            case FILTER_ACTIVE:
                peopleForView = new ArrayList<>();
                for (int i = 0; i < people.size(); i++) {
                    if (people.get(i).getAccessibleApp() == 1) {
                        peopleForView.add(people.get(i));
                    }
                }
                break;
            case FILTER_BLOCKED:
                peopleForView = new ArrayList<>();
                for (int i = 0; i < people.size(); i++) {
                    if (people.get(i).getAccessibleApp() == 0) {
                        peopleForView.add(people.get(i));
                    }
                }
                break;
        }
    }

    private void filterPeopleAndUpdateUi(int filterType, int sortType) {
        filterPeople(filterType);
        sortPeople(sortType);
        pnlColumnValueUsersMain.removeAll();
        if (peopleForView.isEmpty()) {
            pnlColumnValueUsersMain.repaint();
            return;
        }
        for (int i = 0; i < peopleForView.size(); i++) {
            PersonItem personItemPnl = new PersonItem(peopleForView.get(i));
            personItemPnl.setVisible(true);
            GridBagConstraints gbc1 = new GridBagConstraints();
            gbc1.weightx = 1;
            gbc1.fill = GridBagConstraints.HORIZONTAL;
            gbc1.gridwidth = GridBagConstraints.REMAINDER;
            pnlColumnValueUsersMain.add(personItemPnl, gbc1);
        }
        GridBagConstraints gbc2 = new GridBagConstraints();
        gbc2.weightx = 1;
        gbc2.weighty = 1;
        pnlColumnValueUsersMain.add(new Panel(), gbc2);
        pnlColumnValueUsersMain.revalidate();
    }

    private void sortPeople(int sortType) {
        if (peopleForView == null) {
            return;
        }
        switch (sortType) {
            case SORT_ID:
                Collections.sort(peopleForView, (Person arg0, Person arg1) -> {
                    return Integer.compare(arg0.getId(), arg1.getId());
                });
                break;
            case SORT_FULLNAME:
                Collections.sort(peopleForView, (Person arg0, Person arg1) -> {
                    return arg0.getFullname().compareTo(arg1.getFullname());
                });
                break;
            case SORT_USERNAME:
                Collections.sort(peopleForView, (Person arg0, Person arg1) -> {
                    return arg0.getUsername().compareTo(arg1.getUsername());
                });
                break;
            case SORT_EMAIL:
                Collections.sort(peopleForView, (Person arg0, Person arg1) -> {
                    return arg0.getEmail().compareTo(arg1.getEmail());
                });
                break;
        }

    }

    private void sortPeopleAndUpdateUi(int sortType) {
        sortPeople(sortType);
        pnlColumnValueUsersMain.removeAll();
        if (peopleForView.isEmpty()) {
            pnlColumnValueUsersMain.repaint();
            return;
        }
        for (int i = 0; i < peopleForView.size(); i++) {
            PersonItem personItemPnl = new PersonItem(peopleForView.get(i));
            personItemPnl.setVisible(true);
            GridBagConstraints gbc1 = new GridBagConstraints();
            gbc1.weightx = 1;
            gbc1.fill = GridBagConstraints.HORIZONTAL;
            gbc1.gridwidth = GridBagConstraints.REMAINDER;
            pnlColumnValueUsersMain.add(personItemPnl, gbc1);
        }
        GridBagConstraints gbc2 = new GridBagConstraints();
        gbc2.weightx = 1;
        gbc2.weighty = 1;
        pnlColumnValueUsersMain.add(new Panel(), gbc2);
        pnlColumnValueUsersMain.revalidate();
    }

    public void fillPnlListPeopleValueDesDetailInfoMainDetailConferenceMain(Conference conference) {
        List<RegisteredConference> registeredConferences = RegisteredConferenceBUS.getRegisterdConferencesOfConference(conference);
        List<RegisteringConference> registeringConferences = RegisteringConferenceBUS.getRegisteringConferencesOfConference(conference);
        pnlListPeopleValueDesDetailInfoMainDetailConferenceMain.removeAll();
        GridBagConstraints gbc1 = new GridBagConstraints();
        gbc1.weightx = 1;
        gbc1.fill = GridBagConstraints.HORIZONTAL;
        gbc1.gridwidth = GridBagConstraints.REMAINDER;
        GridBagConstraints gbc2 = new GridBagConstraints();
        gbc2.weightx = 1;
        gbc2.weighty = 1;
        for (int i = 0; i < registeredConferences.size(); i++) {
            ParticipantItem participantItemPnl = new ParticipantItem(i + 1, registeredConferences.get(i).getPerson(), ENROLLED_CONFERENCE);
            pnlListPeopleValueDesDetailInfoMainDetailConferenceMain.add(participantItemPnl, gbc1);
        }

        for (int i = 0; i < registeringConferences.size(); i++) {
            ParticipantItem participantItemPnl = new ParticipantItem(registeredConferences.size() + i + 1, registeringConferences.get(i).getPerson(), ENROLLING_CONFERENCE);
            pnlListPeopleValueDesDetailInfoMainDetailConferenceMain.add(participantItemPnl, gbc1);
        }
        pnlListPeopleValueDesDetailInfoMainDetailConferenceMain.add(new Panel(), gbc2);
    }

    public void updateGuessUi() {
        lblSigninOrUserTop.setText("Sign in");
        fillPnlViewHomeMain();
    }

    public void updateAdminUi() {
        fillPnlViewHomeMain();
        fillPnlDataYourConferencesMain();
        fillPnlColumnValueManagementMain();
        fillPnlColumnValueUsersMain();
    }

    public void updateUserUi() {
        fillPnlViewHomeMain();
        fillPnlDataYourConferencesMain();
    }

    public void showFrame() {
        final Toolkit toolkit = Toolkit.getDefaultToolkit();
        final Dimension screenSize = toolkit.getScreenSize();
        final int x = (screenSize.width - getWidth()) / 2;
        final int y = (screenSize.height - getHeight()) / 2;
        setLocation(x, y);
        setVisible(true);
    }

    public void showPnlDetailConferenceMain(Conference conference) {
        MyApplication.setCurShowDetailConference(conference);
        String image = MyApplication.getLocalImagesPath() + conference.getImage();
        BufferedImage img = null;
        try {
            img = ImageIO.read(new File(image));
        } catch (Exception e) {
            img = null;
        }
        if (img != null) {
            Image dimg = img.getScaledInstance(lblImageDetailConference.getWidth(), lblImageDetailConference.getHeight(), Image.SCALE_SMOOTH);
            lblImageDetailConference.setIcon(new ImageIcon(dimg));
        } else {
            lblImageDetailConference.setIcon(null);
        }
        SimpleDateFormat simpleDateFormat = null;
        simpleDateFormat = new SimpleDateFormat("yyyy/MM/dd");
        Date timeStart = new Date(conference.getTimeStart().getTime());
        lblBriefDateBasicInfoMainDetailConferenceMain.setText(simpleDateFormat.format(timeStart));
        txtNameBasicInfoMainDetailConferenceMain.setText(conference.getNameConference());
        txtBriefDesDesDetailInfoMainDetailConferenceMain.setText(conference.getBriefDes());
        txtDetailDesDesDetailInfoMainDetailConferenceMain.setText(conference.getDetailDes());
        simpleDateFormat = new SimpleDateFormat("EEE, MMM d, yyyy");
        lblDateInfoDetailInfoMainDetailConferenceMain.setText(simpleDateFormat.format(timeStart));
        simpleDateFormat = new SimpleDateFormat("HH:mm:ss");
        lblTimeInfoDetailInfoMainDetailConferenceMain.setText(simpleDateFormat.format(timeStart));
        lblDurationInfoDetailInfoMainDetailConferenceMain.setText("Duration " + conference.getDuration().toString());
        lblNameLocationInfoDetailInfoMainDetailConferenceMain.setText(conference.getLocation().getNameLocation());
        txtAddressLocationInfoDetailInfoMainDetailConferenceMain.setText(conference.getLocation().getAddress());
        lblCapacityValueInfoDetailInfoMainDetailConferenceMain.setText(String.valueOf(conference.getLocation().getCapacity()));
        fillPnlListPeopleValueDesDetailInfoMainDetailConferenceMain(conference);
        if (MyApplication.getPersonSignIn() != null) {
            if (RegisteringConferenceBUS.isExist(
                    MyApplication.getCurShowDetailConference(),
                    MyApplication.getPersonSignIn())) {
                pnlEnrollBasicInfoMainDetailConferenceMain.setVisible(false);
                lblAnnouBasicInfoMainDetailConferenceMain.setText(ENROLLING_CONFERENCE);
            } else if (RegisteredConferenceBUS.isExist(
                    MyApplication.getCurShowDetailConference(),
                    MyApplication.getPersonSignIn())) {
                pnlEnrollBasicInfoMainDetailConferenceMain.setVisible(false);
                lblAnnouBasicInfoMainDetailConferenceMain.setText(ENROLLED_CONFERENCE);
            } else {
                pnlEnrollBasicInfoMainDetailConferenceMain.setVisible(true);
                lblAnnouBasicInfoMainDetailConferenceMain.setText("");
            }
        } else {
            pnlEnrollBasicInfoMainDetailConferenceMain.setVisible(true);
            lblAnnouBasicInfoMainDetailConferenceMain.setText("");
        }
        ((CardLayout) pnlMain.getLayout()).show(pnlMain, "DetailConference");
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup btnFilterBy;
    private javax.swing.ButtonGroup btnSortBy;
    private javax.swing.JComboBox<String> cmbFilterByTopUsersMain;
    private javax.swing.JComboBox<String> cmbSearchByTopYourConferencesMain;
    private javax.swing.JComboBox<String> cmbSortByTopUsersMain;
    private javax.swing.JComboBox<String> cmbSortByTopYourConferencesMain;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JLabel lblAboutDesDetailInfoMainDetailConferenceMain;
    private javax.swing.JLabel lblAnnouBasicInfoMainDetailConferenceMain;
    private javax.swing.JLabel lblAvailableConferencesTitleHomeMain;
    private javax.swing.JLabel lblBriefDateBasicInfoMainDetailConferenceMain;
    private javax.swing.JLabel lblCapacityInfoDetailInfoMainDetailConferenceMain;
    private javax.swing.JLabel lblCapacityValueInfoDetailInfoMainDetailConferenceMain;
    private javax.swing.JLabel lblCardViewTitleHomeMain;
    private javax.swing.JLabel lblCardViewTopYourConferencesMain;
    private javax.swing.JLabel lblCreateConferenceTopManagementMain;
    private javax.swing.JLabel lblDateAndTimeInfoDetailInfoMainDetailConferenceMain;
    private javax.swing.JLabel lblDateInfoDetailInfoMainDetailConferenceMain;
    private javax.swing.JLabel lblDetailConferenceTopDetailConferenceMain;
    private javax.swing.JLabel lblDuration;
    private javax.swing.JLabel lblDurationInfoDetailInfoMainDetailConferenceMain;
    private javax.swing.JLabel lblEmailRowHeaderColumnNameUsersMain;
    private javax.swing.JPanel lblEmptyColumnNameManagementMain;
    private javax.swing.JLabel lblEnrollBasicInfoMainDetailConferenceMain;
    private javax.swing.JLabel lblFilterByTopUsersMain;
    private javax.swing.JLabel lblFullnameRowHeaderColumnNameUsersMain;
    private javax.swing.JLabel lblHomeSide;
    private javax.swing.JLabel lblIdRowHeaderColumnNameUsersMain;
    private javax.swing.JLabel lblIdTextColumnNameManagementMain;
    private javax.swing.JLabel lblImageDetailConference;
    private javax.swing.JLabel lblListPeopleInfoDetailInfoMainDetailConferenceMain;
    private javax.swing.JLabel lblListViewTitleHomeMain;
    private javax.swing.JLabel lblListViewTopYourConferencesMain;
    private javax.swing.JLabel lblLocation;
    private javax.swing.JLabel lblLocationInfoDetailInfoMainDetailConferenceMain;
    private javax.swing.JLabel lblLocationTextColumnNameManagementMain;
    private javax.swing.JLabel lblManagementForAdminTopManagementMain;
    private javax.swing.JLabel lblManagementSide;
    private javax.swing.JLabel lblName;
    private javax.swing.JLabel lblNameLocationInfoDetailInfoMainDetailConferenceMain;
    private javax.swing.JLabel lblNameTextColumnNameManagementMain;
    private javax.swing.JLabel lblPeople;
    private javax.swing.JLabel lblSearcIconTopYourConferencesMain;
    private javax.swing.JLabel lblSigninOrUserTop;
    private javax.swing.JLabel lblSortByTopUsersMain;
    private javax.swing.JLabel lblSortByTopYourConferencesMain;
    private javax.swing.JLabel lblTime;
    private javax.swing.JLabel lblTimeInfoDetailInfoMainDetailConferenceMain;
    private javax.swing.JLabel lblTimeTextColumnNameManagementMain;
    private javax.swing.JLabel lblTitleTop;
    private javax.swing.JLabel lblTopYourConferencesMain;
    private javax.swing.JLabel lblUsernameRowHeaderColumnNameUsersMain;
    private javax.swing.JLabel lblUsersManagementTopUsersMain;
    private javax.swing.JLabel lblUsersSide;
    private javax.swing.JLabel lblYourConferencesSide;
    private javax.swing.JPanel pnlBasicInfoMainDetailConferenceMain;
    private javax.swing.JPanel pnlCardViewDataYourConferencesMain;
    private javax.swing.JPanel pnlCardViewHomeMain;
    private javax.swing.JPanel pnlCardViewTitleHomeMain;
    private javax.swing.JPanel pnlCardViewTopYourConferencesMain;
    private javax.swing.JPanel pnlColumnNameListViewDataYourConferencesMain;
    private javax.swing.JPanel pnlColumnNameListViewHomeMain;
    private javax.swing.JPanel pnlColumnNameManagementMain;
    private javax.swing.JPanel pnlColumnNameUsersMain;
    private javax.swing.JPanel pnlColumnValueListViewDataYourConferencesMain;
    private javax.swing.JPanel pnlColumnValueListViewHomeMain;
    private javax.swing.JPanel pnlColumnValueManagementMain;
    private javax.swing.JPanel pnlColumnValueUsersMain;
    private javax.swing.JPanel pnlContentCardViewHomeMain;
    private javax.swing.JPanel pnlCreateConferenceTopManagementMain;
    private javax.swing.JPanel pnlDataYourConferencesMain;
    private javax.swing.JPanel pnlDesDetailInfoMainDetailConferenceMain;
    private javax.swing.JPanel pnlDetailConferenceMain;
    private javax.swing.JPanel pnlDetailInfoMainDetailConferenceMain;
    private javax.swing.JPanel pnlEmptyColumnNameUsersMain;
    private javax.swing.JPanel pnlEmptySide;
    private javax.swing.JPanel pnlEnrollBasicInfoMainDetailConferenceMain;
    private javax.swing.JPanel pnlHomeMain;
    private javax.swing.JPanel pnlHomeSide;
    private javax.swing.JPanel pnlImageBasicInfoMainDetailConferenceMain;
    private javax.swing.JPanel pnlInfoDetailInfoMainDetailConferenceMain;
    private javax.swing.JPanel pnlIntroHomeMain;
    private javax.swing.JPanel pnlListPeopleValueDesDetailInfoMainDetailConferenceMain;
    private javax.swing.JPanel pnlListViewDataYourConferencesMain;
    private javax.swing.JPanel pnlListViewHomeMain;
    private javax.swing.JPanel pnlListViewTitleHomeMain;
    private javax.swing.JPanel pnlListViewTopYourConferencesMain;
    private javax.swing.JPanel pnlMain;
    private javax.swing.JPanel pnlMainDetailConferenceMain;
    private javax.swing.JPanel pnlManagementMain;
    private javax.swing.JPanel pnlManagementSide;
    private javax.swing.JPanel pnlRowHeaderColumnNameUsersMain;
    private javax.swing.JPanel pnlSearchIconTopYourConferencesMain;
    private javax.swing.JPanel pnlSide;
    private javax.swing.JPanel pnlSigninOrUserTop;
    private javax.swing.JPanel pnlTextColumnNameManagementMain;
    private javax.swing.JPanel pnlTitleHomeMain;
    private javax.swing.JPanel pnlTop;
    private javax.swing.JPanel pnlTopDetailConferenceMain;
    private javax.swing.JPanel pnlTopManagementMain;
    private javax.swing.JPanel pnlTopUsersMain;
    private javax.swing.JPanel pnlTopYourConferencesMain;
    private javax.swing.JPanel pnlUsersMain;
    private javax.swing.JPanel pnlUsersSide;
    private javax.swing.JPanel pnlValueCardViewDataYourConferencesMain;
    private javax.swing.JPanel pnlViewHomeMain;
    private javax.swing.JPanel pnlYourConferencesMain;
    private javax.swing.JPanel pnlYourConferencesSide;
    private javax.swing.JScrollPane scrAddressLocationInfoDetailInfoMainDetailConferenceMain;
    private javax.swing.JScrollPane scrBriefDesDesDetailInfoMainDetailConferenceMain;
    private javax.swing.JScrollPane scrColumnValueListViewDataYourConferencesMain;
    private javax.swing.JScrollPane scrColumnValueListViewHomeMain;
    private javax.swing.JScrollPane scrColumnValueManagementMain;
    private javax.swing.JScrollPane scrColumnValueUsersMain;
    private javax.swing.JScrollPane scrContentCardViewHomeMain;
    private javax.swing.JScrollPane scrDetailDesDesDetailInfoMainDetailConferenceMain;
    private javax.swing.JScrollPane scrListPeopleValueDesDetailInfoMainDetailConferenceMain;
    private javax.swing.JScrollPane scrMainDetailConferenceMain;
    private javax.swing.JScrollPane scrNameBasicInfoMainDetailConferenceMain;
    private javax.swing.JScrollPane scrValueCardViewDataYourConferencesMain;
    private javax.swing.JTextArea txtAddressLocationInfoDetailInfoMainDetailConferenceMain;
    private javax.swing.JTextArea txtBriefDesDesDetailInfoMainDetailConferenceMain;
    private javax.swing.JTextArea txtDetailDesDesDetailInfoMainDetailConferenceMain;
    private javax.swing.JTextArea txtIntroHomeMain;
    private javax.swing.JTextArea txtNameBasicInfoMainDetailConferenceMain;
    private javax.swing.JTextField txtSearchTopYourConferencesMain;
    // End of variables declaration//GEN-END:variables

}
