/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.quanghuyabc9.GUI.Management;

import com.quanghuyabc9.BUS.ConferenceBUS;
import com.quanghuyabc9.BUS.LocationBUS;
import com.quanghuyabc9.BUS.RegisteringConferenceBUS;
import com.quanghuyabc9.DTO.Conference;
import com.quanghuyabc9.DTO.Location;
import com.quanghuyabc9.DTO.RegisteringConference;
import com.quanghuyabc9.GUI.Confirm;
import com.quanghuyabc9.GUI.Guess;
import com.quanghuyabc9.GUI.Home.ListViewItem01;
import com.quanghuyabc9.manager.MyApplication;
import com.quanghuyabc9.utils.ImageFilter;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.GridBagConstraints;
import java.awt.Image;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.StandardCopyOption;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import java.util.ArrayList;
import java.util.List;
import javax.imageio.ImageIO;
import javax.swing.DefaultComboBoxModel;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JPanel;
import javax.swing.SwingUtilities;

/**
 *
 * @author quanghuyabc9
 */
public class ConferenceItem extends javax.swing.JPanel {

    private Conference conference;
    private String curImage;
    private boolean isShowingRowDetail;
    private boolean selectNewImage;

    public static final Color MOUSE_MOVED_PNL_COLOR = new Color(153, 153, 153);
    public static final Color MOUSE_EXITED_PNL_COLOR = new Color(243, 242, 241);

    public static final Color MOUSE_MOVED_PNL_COLOR_2 = new Color(237, 235, 233);
    public static final Color MOUSE_EXITED_PNL_COLOR_2 = new Color(255, 255, 255);
    
    public static final String CONFIRM_MSG = "Do you want to delete this conference";

    public ConferenceItem(Conference _conference) {
        conference = _conference;
        curImage = conference.getImage();
        isShowingRowDetail = false;
        initComponents();
        setDataRow();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        pnlRow = new javax.swing.JPanel();
        pnlDataRow = new javax.swing.JPanel();
        lblIdDataRow = new javax.swing.JLabel();
        lblNameDataRow = new javax.swing.JLabel();
        lblLocationDataRow = new javax.swing.JLabel();
        lblTimeDataRow = new javax.swing.JLabel();
        pnlManagementRow = new javax.swing.JPanel();
        pnlListUserRequestingManagementRow = new javax.swing.JPanel();
        lblListUserRequestingManagementRow = new javax.swing.JLabel();
        pnlEditConferenceManagementRow = new javax.swing.JPanel();
        lblEditConferenceManagementRow = new javax.swing.JLabel();
        pnlDeleteConferenceManagementRow = new javax.swing.JPanel();
        lblDeleteConferenceManagementRow = new javax.swing.JLabel();
        pnlRowDetail = new javax.swing.JPanel();
        lblDetailConferenceRowDetail = new javax.swing.JLabel();
        pnlCreateNewConferenceRowDetail = new javax.swing.JPanel();
        lblCreateNewConferenceRowDetail = new javax.swing.JLabel();
        scrDetailConferenceRowDetail = new javax.swing.JScrollPane();
        pnlDetailConferenceRowDetail = new javax.swing.JPanel();
        lblImageDetailConferenceRowDetail = new javax.swing.JLabel();
        scrNameConferenceDetailConferenceRowDetail = new javax.swing.JScrollPane();
        txtNameConferenceDetailConferenceRowDetail = new javax.swing.JTextArea();
        txtTimeStartDetailConferenceRowDetail = new javax.swing.JTextField();
        txtDurationDetailConferenceRowDetail = new javax.swing.JTextField();
        scrBriefDescriptionDetailConferenceRowDetail = new javax.swing.JScrollPane();
        txtBriefDescriptionDetailConferenceRowDetail = new javax.swing.JTextArea();
        scrDetailDescriptionDetailConferenceRowDetail = new javax.swing.JScrollPane();
        txtDetailDescriptionDetailConferenceRowDetail = new javax.swing.JTextArea();
        lblLocationDetailConferenceRowDetail = new javax.swing.JLabel();
        List<Location> locations = LocationBUS.getAll();
        cmbLocationDetailConferenceRowDetail = new javax.swing.JComboBox();
        DefaultComboBoxModel model = new DefaultComboBoxModel(locations.toArray());
        cmbLocationDetailConferenceRowDetail.setModel(model);
        pnlDiscardRowDetail = new javax.swing.JPanel();
        lblDiscardRowDetail = new javax.swing.JLabel();
        pnlSaveRowDetail = new javax.swing.JPanel();
        lblSaveRowDetail = new javax.swing.JLabel();
        pnlUserRequestingRowDetail = new javax.swing.JPanel();
        lblListUserRequestingRowDetail = new javax.swing.JLabel();
        scrListUserRequestingRowDetail = new javax.swing.JScrollPane();
        pnlListUserRequestingRowDetail = new javax.swing.JPanel();

        setBackground(new java.awt.Color(255, 255, 255));
        setPreferredSize(new java.awt.Dimension(724, 575));
        setLayout(new java.awt.GridBagLayout());

        pnlRow.setBackground(new java.awt.Color(255, 255, 255));
        pnlRow.setPreferredSize(new java.awt.Dimension(0, 50));
        pnlRow.setLayout(new java.awt.GridBagLayout());

        pnlDataRow.setBackground(new java.awt.Color(255, 255, 255));
        pnlDataRow.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 25, 0, 0));
        pnlDataRow.setPreferredSize(new java.awt.Dimension(0, 0));
        pnlDataRow.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                pnlDataRowMouseMoved(evt);
            }
        });
        pnlDataRow.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseExited(java.awt.event.MouseEvent evt) {
                pnlDataRowMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                pnlDataRowMousePressed(evt);
            }
        });
        pnlDataRow.setLayout(new java.awt.GridBagLayout());

        lblIdDataRow.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        lblIdDataRow.setForeground(new java.awt.Color(51, 51, 51));
        lblIdDataRow.setText("ID");
        lblIdDataRow.setPreferredSize(new java.awt.Dimension(0, 0));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.2;
        gridBagConstraints.weighty = 1.0;
        pnlDataRow.add(lblIdDataRow, gridBagConstraints);

        lblNameDataRow.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        lblNameDataRow.setForeground(new java.awt.Color(51, 51, 51));
        lblNameDataRow.setText("Name value");
        lblNameDataRow.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 10));
        lblNameDataRow.setPreferredSize(new java.awt.Dimension(0, 0));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        pnlDataRow.add(lblNameDataRow, gridBagConstraints);

        lblLocationDataRow.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        lblLocationDataRow.setForeground(new java.awt.Color(51, 51, 51));
        lblLocationDataRow.setText("Location value");
        lblLocationDataRow.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 10));
        lblLocationDataRow.setPreferredSize(new java.awt.Dimension(0, 0));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        pnlDataRow.add(lblLocationDataRow, gridBagConstraints);

        lblTimeDataRow.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        lblTimeDataRow.setForeground(new java.awt.Color(51, 51, 51));
        lblTimeDataRow.setText("Time Value");
        lblTimeDataRow.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 10));
        lblTimeDataRow.setPreferredSize(new java.awt.Dimension(0, 0));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.8;
        gridBagConstraints.weighty = 1.0;
        pnlDataRow.add(lblTimeDataRow, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        pnlRow.add(pnlDataRow, gridBagConstraints);

        pnlManagementRow.setBackground(new java.awt.Color(255, 255, 255));
        pnlManagementRow.setLayout(new javax.swing.BoxLayout(pnlManagementRow, javax.swing.BoxLayout.LINE_AXIS));

        pnlListUserRequestingManagementRow.setBackground(new java.awt.Color(255, 255, 255));
        pnlListUserRequestingManagementRow.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                pnlListUserRequestingManagementRowMouseMoved(evt);
            }
        });
        pnlListUserRequestingManagementRow.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseExited(java.awt.event.MouseEvent evt) {
                pnlListUserRequestingManagementRowMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                pnlListUserRequestingManagementRowMousePressed(evt);
            }
        });
        pnlListUserRequestingManagementRow.setLayout(new java.awt.BorderLayout());

        lblListUserRequestingManagementRow.setForeground(new java.awt.Color(51, 51, 51));
        lblListUserRequestingManagementRow.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblListUserRequestingManagementRow.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/quanghuyabc9/images/icons8-add-user-group-man-man-24.png"))); // NOI18N
        lblListUserRequestingManagementRow.setText("0");
        lblListUserRequestingManagementRow.setPreferredSize(new java.awt.Dimension(0, 0));
        pnlListUserRequestingManagementRow.add(lblListUserRequestingManagementRow, java.awt.BorderLayout.CENTER);

        pnlManagementRow.add(pnlListUserRequestingManagementRow);

        pnlEditConferenceManagementRow.setBackground(new java.awt.Color(255, 255, 255));
        pnlEditConferenceManagementRow.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                pnlEditConferenceManagementRowMouseMoved(evt);
            }
        });
        pnlEditConferenceManagementRow.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseExited(java.awt.event.MouseEvent evt) {
                pnlEditConferenceManagementRowMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                pnlEditConferenceManagementRowMousePressed(evt);
            }
        });
        pnlEditConferenceManagementRow.setLayout(new java.awt.BorderLayout());

        lblEditConferenceManagementRow.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblEditConferenceManagementRow.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/quanghuyabc9/images/icons8-edit-property-24.png"))); // NOI18N
        lblEditConferenceManagementRow.setPreferredSize(new java.awt.Dimension(0, 0));
        pnlEditConferenceManagementRow.add(lblEditConferenceManagementRow, java.awt.BorderLayout.CENTER);

        pnlManagementRow.add(pnlEditConferenceManagementRow);

        pnlDeleteConferenceManagementRow.setBackground(new java.awt.Color(255, 255, 255));
        pnlDeleteConferenceManagementRow.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                pnlDeleteConferenceManagementRowMouseMoved(evt);
            }
        });
        pnlDeleteConferenceManagementRow.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseExited(java.awt.event.MouseEvent evt) {
                pnlDeleteConferenceManagementRowMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                pnlDeleteConferenceManagementRowMousePressed(evt);
            }
        });
        pnlDeleteConferenceManagementRow.setLayout(new java.awt.BorderLayout());

        lblDeleteConferenceManagementRow.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblDeleteConferenceManagementRow.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/quanghuyabc9/images/icons8-delete-bin-24.png"))); // NOI18N
        lblDeleteConferenceManagementRow.setPreferredSize(new java.awt.Dimension(0, 0));
        pnlDeleteConferenceManagementRow.add(lblDeleteConferenceManagementRow, java.awt.BorderLayout.CENTER);

        pnlManagementRow.add(pnlDeleteConferenceManagementRow);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.2;
        gridBagConstraints.weighty = 1.0;
        pnlRow.add(pnlManagementRow, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        add(pnlRow, gridBagConstraints);

        pnlRowDetail.setBackground(new java.awt.Color(243, 242, 241));
        pnlRowDetail.setBorder(javax.swing.BorderFactory.createEmptyBorder(5, 25, 0, 10));
        pnlRowDetail.setPreferredSize(new java.awt.Dimension(0, 0));

        lblDetailConferenceRowDetail.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        lblDetailConferenceRowDetail.setForeground(new java.awt.Color(46, 164, 79));
        lblDetailConferenceRowDetail.setText("Detail Conference");
        lblDetailConferenceRowDetail.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 0)));

        pnlCreateNewConferenceRowDetail.setBackground(new java.awt.Color(242, 242, 241));
        pnlCreateNewConferenceRowDetail.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(153, 153, 153), 2, true));
        pnlCreateNewConferenceRowDetail.setPreferredSize(new java.awt.Dimension(0, 0));
        pnlCreateNewConferenceRowDetail.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                pnlCreateNewConferenceRowDetailMouseMoved(evt);
            }
        });
        pnlCreateNewConferenceRowDetail.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseExited(java.awt.event.MouseEvent evt) {
                pnlCreateNewConferenceRowDetailMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                pnlCreateNewConferenceRowDetailMousePressed(evt);
            }
        });
        pnlCreateNewConferenceRowDetail.setLayout(new java.awt.BorderLayout());

        lblCreateNewConferenceRowDetail.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        lblCreateNewConferenceRowDetail.setForeground(new java.awt.Color(51, 51, 51));
        lblCreateNewConferenceRowDetail.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/quanghuyabc9/images/icons8-plus-math-24.png"))); // NOI18N
        lblCreateNewConferenceRowDetail.setText("Create new conference");
        lblCreateNewConferenceRowDetail.setPreferredSize(new java.awt.Dimension(0, 0));
        pnlCreateNewConferenceRowDetail.add(lblCreateNewConferenceRowDetail, java.awt.BorderLayout.CENTER);

        scrDetailConferenceRowDetail.setBackground(new java.awt.Color(243, 242, 241));
        scrDetailConferenceRowDetail.setBorder(javax.swing.BorderFactory.createEmptyBorder(10, 0, 0, 0));
        scrDetailConferenceRowDetail.setPreferredSize(new java.awt.Dimension(0, 0));

        pnlDetailConferenceRowDetail.setBackground(new java.awt.Color(243, 242, 241));

        lblImageDetailConferenceRowDetail.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(153, 153, 153), 1, true));
        lblImageDetailConferenceRowDetail.setPreferredSize(new java.awt.Dimension(0, 0));
        lblImageDetailConferenceRowDetail.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                lblImageDetailConferenceRowDetailMousePressed(evt);
            }
        });

        scrNameConferenceDetailConferenceRowDetail.setBackground(new java.awt.Color(243, 242, 241));
        scrNameConferenceDetailConferenceRowDetail.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Name Confence", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 1, 14), new java.awt.Color(51, 51, 51))); // NOI18N

        txtNameConferenceDetailConferenceRowDetail.setBackground(new java.awt.Color(243, 242, 241));
        txtNameConferenceDetailConferenceRowDetail.setColumns(20);
        txtNameConferenceDetailConferenceRowDetail.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        txtNameConferenceDetailConferenceRowDetail.setForeground(new java.awt.Color(51, 51, 51));
        txtNameConferenceDetailConferenceRowDetail.setLineWrap(true);
        txtNameConferenceDetailConferenceRowDetail.setRows(5);
        txtNameConferenceDetailConferenceRowDetail.setPreferredSize(new java.awt.Dimension(0, 0));
        scrNameConferenceDetailConferenceRowDetail.setViewportView(txtNameConferenceDetailConferenceRowDetail);

        txtTimeStartDetailConferenceRowDetail.setBackground(new java.awt.Color(243, 242, 241));
        txtTimeStartDetailConferenceRowDetail.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        txtTimeStartDetailConferenceRowDetail.setForeground(new java.awt.Color(51, 51, 51));
        txtTimeStartDetailConferenceRowDetail.setText("yyyy-mm-yy hh:mm:ss");
        txtTimeStartDetailConferenceRowDetail.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Time Start", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 1, 14), new java.awt.Color(51, 51, 51))); // NOI18N

        txtDurationDetailConferenceRowDetail.setBackground(new java.awt.Color(243, 242, 241));
        txtDurationDetailConferenceRowDetail.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        txtDurationDetailConferenceRowDetail.setForeground(new java.awt.Color(51, 51, 51));
        txtDurationDetailConferenceRowDetail.setText("hh:mm:ss");
        txtDurationDetailConferenceRowDetail.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Duration", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 1, 14), new java.awt.Color(51, 51, 51))); // NOI18N

        scrBriefDescriptionDetailConferenceRowDetail.setBackground(new java.awt.Color(243, 242, 241));
        scrBriefDescriptionDetailConferenceRowDetail.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Brief Description", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 1, 14), new java.awt.Color(51, 51, 51))); // NOI18N

        txtBriefDescriptionDetailConferenceRowDetail.setBackground(new java.awt.Color(243, 242, 241));
        txtBriefDescriptionDetailConferenceRowDetail.setColumns(20);
        txtBriefDescriptionDetailConferenceRowDetail.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        txtBriefDescriptionDetailConferenceRowDetail.setForeground(new java.awt.Color(51, 51, 51));
        txtBriefDescriptionDetailConferenceRowDetail.setLineWrap(true);
        txtBriefDescriptionDetailConferenceRowDetail.setRows(5);
        scrBriefDescriptionDetailConferenceRowDetail.setViewportView(txtBriefDescriptionDetailConferenceRowDetail);

        scrDetailDescriptionDetailConferenceRowDetail.setBorder(null);

        txtDetailDescriptionDetailConferenceRowDetail.setBackground(new java.awt.Color(243, 242, 241));
        txtDetailDescriptionDetailConferenceRowDetail.setColumns(20);
        txtDetailDescriptionDetailConferenceRowDetail.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        txtDetailDescriptionDetailConferenceRowDetail.setForeground(new java.awt.Color(51, 51, 51));
        txtDetailDescriptionDetailConferenceRowDetail.setLineWrap(true);
        txtDetailDescriptionDetailConferenceRowDetail.setRows(5);
        txtDetailDescriptionDetailConferenceRowDetail.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Detail Description", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 1, 14), new java.awt.Color(51, 51, 51))); // NOI18N
        scrDetailDescriptionDetailConferenceRowDetail.setViewportView(txtDetailDescriptionDetailConferenceRowDetail);

        lblLocationDetailConferenceRowDetail.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        lblLocationDetailConferenceRowDetail.setForeground(new java.awt.Color(51, 51, 51));
        lblLocationDetailConferenceRowDetail.setText("Location");

        cmbLocationDetailConferenceRowDetail.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        cmbLocationDetailConferenceRowDetail.setToolTipText("");

        javax.swing.GroupLayout pnlDetailConferenceRowDetailLayout = new javax.swing.GroupLayout(pnlDetailConferenceRowDetail);
        pnlDetailConferenceRowDetail.setLayout(pnlDetailConferenceRowDetailLayout);
        pnlDetailConferenceRowDetailLayout.setHorizontalGroup(
            pnlDetailConferenceRowDetailLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlDetailConferenceRowDetailLayout.createSequentialGroup()
                .addComponent(lblImageDetailConferenceRowDetail, javax.swing.GroupLayout.PREFERRED_SIZE, 292, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlDetailConferenceRowDetailLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(scrNameConferenceDetailConferenceRowDetail)
                    .addGroup(pnlDetailConferenceRowDetailLayout.createSequentialGroup()
                        .addComponent(txtTimeStartDetailConferenceRowDetail, javax.swing.GroupLayout.DEFAULT_SIZE, 208, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtDurationDetailConferenceRowDetail, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE))))
            .addComponent(scrBriefDescriptionDetailConferenceRowDetail)
            .addComponent(scrDetailDescriptionDetailConferenceRowDetail)
            .addGroup(pnlDetailConferenceRowDetailLayout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(lblLocationDetailConferenceRowDetail)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(pnlDetailConferenceRowDetailLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(cmbLocationDetailConferenceRowDetail, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnlDetailConferenceRowDetailLayout.setVerticalGroup(
            pnlDetailConferenceRowDetailLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlDetailConferenceRowDetailLayout.createSequentialGroup()
                .addGroup(pnlDetailConferenceRowDetailLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(lblImageDetailConferenceRowDetail, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(pnlDetailConferenceRowDetailLayout.createSequentialGroup()
                        .addComponent(scrNameConferenceDetailConferenceRowDetail, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pnlDetailConferenceRowDetailLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtTimeStartDetailConferenceRowDetail)
                            .addComponent(txtDurationDetailConferenceRowDetail))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(scrBriefDescriptionDetailConferenceRowDetail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(scrDetailDescriptionDetailConferenceRowDetail, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblLocationDetailConferenceRowDetail)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cmbLocationDetailConferenceRowDetail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(14, Short.MAX_VALUE))
        );

        scrDetailConferenceRowDetail.setViewportView(pnlDetailConferenceRowDetail);

        pnlDiscardRowDetail.setBackground(new java.awt.Color(243, 242, 241));
        pnlDiscardRowDetail.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(153, 153, 153), 2, true));
        pnlDiscardRowDetail.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                pnlDiscardRowDetailMouseMoved(evt);
            }
        });
        pnlDiscardRowDetail.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseExited(java.awt.event.MouseEvent evt) {
                pnlDiscardRowDetailMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                pnlDiscardRowDetailMousePressed(evt);
            }
        });
        pnlDiscardRowDetail.setLayout(new java.awt.BorderLayout());

        lblDiscardRowDetail.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        lblDiscardRowDetail.setForeground(new java.awt.Color(153, 153, 153));
        lblDiscardRowDetail.setText("Discard");
        lblDiscardRowDetail.setBorder(javax.swing.BorderFactory.createEmptyBorder(10, 10, 10, 10));
        pnlDiscardRowDetail.add(lblDiscardRowDetail, java.awt.BorderLayout.CENTER);

        pnlSaveRowDetail.setBackground(new java.awt.Color(209, 65, 12));
        pnlSaveRowDetail.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                pnlSaveRowDetailMouseMoved(evt);
            }
        });
        pnlSaveRowDetail.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseExited(java.awt.event.MouseEvent evt) {
                pnlSaveRowDetailMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                pnlSaveRowDetailMousePressed(evt);
            }
        });
        pnlSaveRowDetail.setLayout(new java.awt.BorderLayout());

        lblSaveRowDetail.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        lblSaveRowDetail.setForeground(new java.awt.Color(255, 255, 255));
        lblSaveRowDetail.setText("Save");
        lblSaveRowDetail.setBorder(javax.swing.BorderFactory.createEmptyBorder(10, 40, 10, 40));
        pnlSaveRowDetail.add(lblSaveRowDetail, java.awt.BorderLayout.CENTER);

        pnlUserRequestingRowDetail.setBackground(new java.awt.Color(243, 242, 241));

        lblListUserRequestingRowDetail.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        lblListUserRequestingRowDetail.setForeground(new java.awt.Color(46, 164, 79));
        lblListUserRequestingRowDetail.setText("List user requesting");

        scrListUserRequestingRowDetail.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(153, 153, 153), 2, true));

        pnlListUserRequestingRowDetail.setBackground(new java.awt.Color(243, 242, 241));
        pnlListUserRequestingRowDetail.setLayout(new java.awt.GridBagLayout());
        scrListUserRequestingRowDetail.setViewportView(pnlListUserRequestingRowDetail);

        javax.swing.GroupLayout pnlUserRequestingRowDetailLayout = new javax.swing.GroupLayout(pnlUserRequestingRowDetail);
        pnlUserRequestingRowDetail.setLayout(pnlUserRequestingRowDetailLayout);
        pnlUserRequestingRowDetailLayout.setHorizontalGroup(
            pnlUserRequestingRowDetailLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lblListUserRequestingRowDetail, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(pnlUserRequestingRowDetailLayout.createSequentialGroup()
                .addComponent(scrListUserRequestingRowDetail, javax.swing.GroupLayout.PREFERRED_SIZE, 326, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        pnlUserRequestingRowDetailLayout.setVerticalGroup(
            pnlUserRequestingRowDetailLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlUserRequestingRowDetailLayout.createSequentialGroup()
                .addComponent(lblListUserRequestingRowDetail, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(scrListUserRequestingRowDetail))
        );

        javax.swing.GroupLayout pnlRowDetailLayout = new javax.swing.GroupLayout(pnlRowDetail);
        pnlRowDetail.setLayout(pnlRowDetailLayout);
        pnlRowDetailLayout.setHorizontalGroup(
            pnlRowDetailLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlRowDetailLayout.createSequentialGroup()
                .addComponent(lblDetailConferenceRowDetail, javax.swing.GroupLayout.DEFAULT_SIZE, 474, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnlCreateNewConferenceRowDetail, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addComponent(scrDetailConferenceRowDetail, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlRowDetailLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(pnlDiscardRowDetail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(pnlSaveRowDetail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(pnlRowDetailLayout.createSequentialGroup()
                .addComponent(pnlUserRequestingRowDetail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        pnlRowDetailLayout.setVerticalGroup(
            pnlRowDetailLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlRowDetailLayout.createSequentialGroup()
                .addGroup(pnlRowDetailLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(pnlCreateNewConferenceRowDetail, javax.swing.GroupLayout.DEFAULT_SIZE, 39, Short.MAX_VALUE)
                    .addComponent(lblDetailConferenceRowDetail, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(scrDetailConferenceRowDetail, javax.swing.GroupLayout.PREFERRED_SIZE, 254, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlRowDetailLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(pnlSaveRowDetail, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pnlDiscardRowDetail, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnlUserRequestingRowDetail, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        add(pnlRowDetail, gridBagConstraints);
    }// </editor-fold>//GEN-END:initComponents

    private void pnlCreateNewConferenceRowDetailMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnlCreateNewConferenceRowDetailMouseMoved
        // TODO add your handling code here:
        pnlCreateNewConferenceRowDetail.setBackground(Guess.MOUSE_MOVED_PNL_COLOR);
    }//GEN-LAST:event_pnlCreateNewConferenceRowDetailMouseMoved

    private void pnlCreateNewConferenceRowDetailMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnlCreateNewConferenceRowDetailMouseExited
        // TODO add your handling code here:
        pnlCreateNewConferenceRowDetail.setBackground(Guess.MOUSE_EXITED_PNL_COLOR);
    }//GEN-LAST:event_pnlCreateNewConferenceRowDetailMouseExited

    private void pnlCreateNewConferenceRowDetailMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnlCreateNewConferenceRowDetailMousePressed
        // TODO add your handling code here:
        ManageConference createNewConferenceDialog = new ManageConference(new JFrame(), true, ManageConference.CREATE_NEW_CONFERENCE);
        boolean addConferenceSuccessfully = createNewConferenceDialog.showDiaglog();
        if (addConferenceSuccessfully) {
            Guess root = (Guess) SwingUtilities.getWindowAncestor(this);
            root.updateAdminUi();
            selectNewImage = true;
        }
    }//GEN-LAST:event_pnlCreateNewConferenceRowDetailMousePressed

    private void lblImageDetailConferenceRowDetailMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblImageDetailConferenceRowDetailMousePressed
        // TODO add your handling code here:
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.addChoosableFileFilter(new ImageFilter());
        fileChooser.setAcceptAllFileFilterUsed(false);

        int option = fileChooser.showOpenDialog(null);
        if (option == JFileChooser.APPROVE_OPTION) {
            File file = fileChooser.getSelectedFile();
            curImage = file.getAbsolutePath();
            setImage(curImage);
            selectNewImage = true;
        }
    }//GEN-LAST:event_lblImageDetailConferenceRowDetailMousePressed

    private void pnlSaveRowDetailMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnlSaveRowDetailMouseMoved
        // TODO add your handling code here:
        pnlSaveRowDetail.setBackground(ManageConference.MOUSE_MOVED_PNL_COLOR);
    }//GEN-LAST:event_pnlSaveRowDetailMouseMoved

    private void pnlSaveRowDetailMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnlSaveRowDetailMousePressed
        // TODO add your handling code here:
        String nameConference = txtNameConferenceDetailConferenceRowDetail.getText();
        String briefDes = txtBriefDescriptionDetailConferenceRowDetail.getText();
        String detalDes = txtDetailDescriptionDetailConferenceRowDetail.getText();
        String startTime = txtTimeStartDetailConferenceRowDetail.getText();
        String duration = txtDurationDetailConferenceRowDetail.getText();
        Location location = (Location) cmbLocationDetailConferenceRowDetail.getSelectedItem();
        List<String> errors = new ArrayList<>();
        boolean isSuccess = false;
        String newImageName = conference.getImage();
        if (selectNewImage) {
            DateTimeFormatter dtf = DateTimeFormatter.ofPattern("yyyyMMddHHmmss");
            LocalDateTime now = LocalDateTime.now();
            newImageName = dtf.format(now) + ".png";
            String newImagePath = MyApplication.getLocalImagesPath() + newImageName;
            try {
                Files.copy(new File(curImage).toPath(), new File(newImagePath).toPath(), StandardCopyOption.REPLACE_EXISTING);
                Files.delete(new File(MyApplication.getLocalImagesPath() + conference.getImage()).toPath());
            } catch (IOException e) {
                e   .printStackTrace();
            }
        }
        isSuccess = ConferenceBUS.update(conference.getId(), nameConference, briefDes,
                detalDes, newImageName, startTime,
                duration, location, errors);
        if (isSuccess) {
            pnlRowDetail.setVisible(false);
            setPreferredSize(new Dimension(0, 50));
            isShowingRowDetail = false;
            Guess root = (Guess)SwingUtilities.getWindowAncestor(this);
            root.updateAdminUi();
        } else {
            com.quanghuyabc9.GUI.Error dialog = new com.quanghuyabc9.GUI.Error(new javax.swing.JFrame(), true, errors);
            dialog.showDialog();
        }
    }//GEN-LAST:event_pnlSaveRowDetailMousePressed

    private void pnlSaveRowDetailMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnlSaveRowDetailMouseExited
        // TODO add your handling code here:
        pnlSaveRowDetail.setBackground(ManageConference.MOUSE_EXITED_PNL_COLOR);
    }//GEN-LAST:event_pnlSaveRowDetailMouseExited

    private void pnlDataRowMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnlDataRowMouseMoved
        // TODO add your handling code here:
        pnlDataRow.setBackground(ListViewItem01.MOUSE_MOVED_PNL_COLOR);
    }//GEN-LAST:event_pnlDataRowMouseMoved

    private void pnlDataRowMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnlDataRowMouseExited
        // TODO add your handling code here:
        pnlDataRow.setBackground(ListViewItem01.MOUSE_EXITED_PNL_COLOR);
    }//GEN-LAST:event_pnlDataRowMouseExited

    private void pnlDataRowMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnlDataRowMousePressed
        // TODO add your handling code here:
        if (isShowingRowDetail) {
            isShowingRowDetail = false;
            setPreferredSize(new Dimension(0, 50));
            pnlRowDetail.setVisible(false);
        } else {
            isShowingRowDetail = true;
            setPreferredSize(new Dimension(0, 575));
            setDataRowDetail();
            pnlRowDetail.setVisible(true);
        }
    }//GEN-LAST:event_pnlDataRowMousePressed

    private void pnlDiscardRowDetailMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnlDiscardRowDetailMouseMoved
        // TODO add your handling code here:
        pnlDiscardRowDetail.setBackground(Guess.MOUSE_MOVED_PNL_COLOR);
    }//GEN-LAST:event_pnlDiscardRowDetailMouseMoved

    private void pnlDiscardRowDetailMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnlDiscardRowDetailMousePressed
        // TODO add your handling code here:
        isShowingRowDetail = false;
        pnlRowDetail.setVisible(false);
        setPreferredSize(new Dimension(0, 50));
    }//GEN-LAST:event_pnlDiscardRowDetailMousePressed

    private void pnlDiscardRowDetailMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnlDiscardRowDetailMouseExited
        // TODO add your handling code here:
        pnlDiscardRowDetail.setBackground(MOUSE_EXITED_PNL_COLOR);
    }//GEN-LAST:event_pnlDiscardRowDetailMouseExited

    private void pnlListUserRequestingManagementRowMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnlListUserRequestingManagementRowMousePressed
        // TODO add your handling code here:
        ListUserRequesting listUserRequestingDialog = new ListUserRequesting(new JFrame(), true, conference);
        boolean isModified = listUserRequestingDialog.showDialog();
        if (isModified) {
            Guess root = (Guess) SwingUtilities.getWindowAncestor(this);
            root.updateAdminUi();
        }
    }//GEN-LAST:event_pnlListUserRequestingManagementRowMousePressed

    private void pnlListUserRequestingManagementRowMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnlListUserRequestingManagementRowMouseMoved
        // TODO add your handling code here:
        pnlListUserRequestingManagementRow.setBackground(MOUSE_MOVED_PNL_COLOR_2);
    }//GEN-LAST:event_pnlListUserRequestingManagementRowMouseMoved

    private void pnlListUserRequestingManagementRowMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnlListUserRequestingManagementRowMouseExited
        // TODO add your handling code here:
        pnlListUserRequestingManagementRow.setBackground(MOUSE_EXITED_PNL_COLOR_2);
    }//GEN-LAST:event_pnlListUserRequestingManagementRowMouseExited

    private void pnlEditConferenceManagementRowMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnlEditConferenceManagementRowMousePressed
        // TODO add your handling code here:
        ManageConference manageConferenceDialog = new ManageConference(new JFrame(), true, ManageConference.EDIT_CONFERENCE, conference);
        boolean isSucess = manageConferenceDialog.showDiaglog();
        if (isSucess) {
            Guess root = (Guess) SwingUtilities.getWindowAncestor(this);
            root.updateAdminUi();
        }
    }//GEN-LAST:event_pnlEditConferenceManagementRowMousePressed

    private void pnlEditConferenceManagementRowMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnlEditConferenceManagementRowMouseMoved
        // TODO add your handling code here:
        pnlEditConferenceManagementRow.setBackground(MOUSE_MOVED_PNL_COLOR_2);
    }//GEN-LAST:event_pnlEditConferenceManagementRowMouseMoved

    private void pnlEditConferenceManagementRowMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnlEditConferenceManagementRowMouseExited
        // TODO add your handling code here:
        pnlEditConferenceManagementRow.setBackground(MOUSE_EXITED_PNL_COLOR_2);
    }//GEN-LAST:event_pnlEditConferenceManagementRowMouseExited

    private void pnlDeleteConferenceManagementRowMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnlDeleteConferenceManagementRowMousePressed
        // TODO add your handling code here:
        Confirm confirmDialog = new Confirm(new JFrame(), true, CONFIRM_MSG);
        boolean delete = confirmDialog.showDialog();
        if (delete) {
            ConferenceBUS.delete(conference);
            try{
                Files.delete(new File(MyApplication.getLocalImagesPath() + conference.getImage()).toPath());
            } catch(IOException e) {
                e.printStackTrace();
            } 
            Guess root = (Guess) SwingUtilities.getWindowAncestor(this);
            root.updateAdminUi();
        }
    }//GEN-LAST:event_pnlDeleteConferenceManagementRowMousePressed

    private void pnlDeleteConferenceManagementRowMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnlDeleteConferenceManagementRowMouseMoved
        // TODO add your handling code here:
        pnlDeleteConferenceManagementRow.setBackground(MOUSE_MOVED_PNL_COLOR_2);
    }//GEN-LAST:event_pnlDeleteConferenceManagementRowMouseMoved

    private void pnlDeleteConferenceManagementRowMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnlDeleteConferenceManagementRowMouseExited
        // TODO add your handling code here:
        pnlDeleteConferenceManagementRow.setBackground(MOUSE_EXITED_PNL_COLOR_2);
    }//GEN-LAST:event_pnlDeleteConferenceManagementRowMouseExited

    private void setImage(String image) {
        BufferedImage img = null;
        try {
            img = ImageIO.read(new File(image));
        } catch (Exception e) {
            img = null;
        }
        if (img != null) {
            Image dimg = img.getScaledInstance(lblImageDetailConferenceRowDetail.getWidth(), lblImageDetailConferenceRowDetail.getHeight(), Image.SCALE_SMOOTH);
            lblImageDetailConferenceRowDetail.setIcon(new ImageIcon(dimg));
        }
    }

    public final void setDataRow() {
        String timeStart = conference.getTimeStart().toString();
        String duration = conference.getDuration().toString();
        int id = conference.getId();
        String nameConference = conference.getNameConference();
        Location location = conference.getLocation();
        lblIdDataRow.setText(String.valueOf(id));
        lblNameDataRow.setText(nameConference);
        lblLocationDataRow.setText(location.toString());
        lblTimeDataRow.setText(timeStart + " " + duration);
        List<RegisteringConference> registeringConferences = RegisteringConferenceBUS.getRegisteringConferencesOfConference(conference);
        lblListUserRequestingManagementRow.setText(String.valueOf(registeringConferences.size()));
        isShowingRowDetail = false;
        pnlRowDetail.setVisible(false);
        setPreferredSize(new Dimension(0, 50));
    }

    public final void setDataRowDetail() {
        setImage(MyApplication.getLocalImagesPath() + curImage);
        txtNameConferenceDetailConferenceRowDetail.setText(conference.getNameConference());
        txtTimeStartDetailConferenceRowDetail.setText(conference.getTimeStart().toString());
        txtDurationDetailConferenceRowDetail.setText(conference.getDuration().toString());
        txtBriefDescriptionDetailConferenceRowDetail.setText(conference.getBriefDes());
        txtDetailDescriptionDetailConferenceRowDetail.setText(conference.getDetailDes());
        cmbLocationDetailConferenceRowDetail.setSelectedItem(conference.getLocation());
        setDataListUserRequesting();
    }

    public final void setDataListUserRequesting() {
        pnlListUserRequestingRowDetail.removeAll();
        List<RegisteringConference> registeringConferences = RegisteringConferenceBUS.getRegisteringConferencesOfConference(conference);
        if (registeringConferences.isEmpty()) {
            pnlListUserRequestingRowDetail.repaint();
            return;
        }
        GridBagConstraints gbc = new GridBagConstraints();
        gbc.weightx = 1;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        gbc.gridwidth = GridBagConstraints.REMAINDER;
        for (int i = 0; i < registeringConferences.size(); i++) {
            UserRequestingItem02 userRequestingItem = new UserRequestingItem02(registeringConferences.get(i));
            pnlListUserRequestingRowDetail.add(userRequestingItem, gbc);
        }
        GridBagConstraints gbcAlign = new GridBagConstraints();
        gbcAlign.weightx = 1;
        gbcAlign.weighty = 1;
        pnlListUserRequestingRowDetail.add(new JPanel(), gbcAlign);
        pnlListUserRequestingRowDetail.revalidate();
        pnlListUserRequestingRowDetail.repaint();
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox cmbLocationDetailConferenceRowDetail;
    private javax.swing.JLabel lblCreateNewConferenceRowDetail;
    private javax.swing.JLabel lblDeleteConferenceManagementRow;
    private javax.swing.JLabel lblDetailConferenceRowDetail;
    private javax.swing.JLabel lblDiscardRowDetail;
    private javax.swing.JLabel lblEditConferenceManagementRow;
    private javax.swing.JLabel lblIdDataRow;
    private javax.swing.JLabel lblImageDetailConferenceRowDetail;
    private javax.swing.JLabel lblListUserRequestingManagementRow;
    private javax.swing.JLabel lblListUserRequestingRowDetail;
    private javax.swing.JLabel lblLocationDataRow;
    private javax.swing.JLabel lblLocationDetailConferenceRowDetail;
    private javax.swing.JLabel lblNameDataRow;
    private javax.swing.JLabel lblSaveRowDetail;
    private javax.swing.JLabel lblTimeDataRow;
    private javax.swing.JPanel pnlCreateNewConferenceRowDetail;
    private javax.swing.JPanel pnlDataRow;
    private javax.swing.JPanel pnlDeleteConferenceManagementRow;
    private javax.swing.JPanel pnlDetailConferenceRowDetail;
    private javax.swing.JPanel pnlDiscardRowDetail;
    private javax.swing.JPanel pnlEditConferenceManagementRow;
    private javax.swing.JPanel pnlListUserRequestingManagementRow;
    private javax.swing.JPanel pnlListUserRequestingRowDetail;
    private javax.swing.JPanel pnlManagementRow;
    private javax.swing.JPanel pnlRow;
    private javax.swing.JPanel pnlRowDetail;
    private javax.swing.JPanel pnlSaveRowDetail;
    private javax.swing.JPanel pnlUserRequestingRowDetail;
    private javax.swing.JScrollPane scrBriefDescriptionDetailConferenceRowDetail;
    private javax.swing.JScrollPane scrDetailConferenceRowDetail;
    private javax.swing.JScrollPane scrDetailDescriptionDetailConferenceRowDetail;
    private javax.swing.JScrollPane scrListUserRequestingRowDetail;
    private javax.swing.JScrollPane scrNameConferenceDetailConferenceRowDetail;
    private javax.swing.JTextArea txtBriefDescriptionDetailConferenceRowDetail;
    private javax.swing.JTextArea txtDetailDescriptionDetailConferenceRowDetail;
    private javax.swing.JTextField txtDurationDetailConferenceRowDetail;
    private javax.swing.JTextArea txtNameConferenceDetailConferenceRowDetail;
    private javax.swing.JTextField txtTimeStartDetailConferenceRowDetail;
    // End of variables declaration//GEN-END:variables
}
