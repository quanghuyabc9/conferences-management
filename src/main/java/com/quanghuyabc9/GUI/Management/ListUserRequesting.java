/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.quanghuyabc9.GUI.Management;

import com.quanghuyabc9.BUS.ConferenceBUS;
import com.quanghuyabc9.BUS.RegisteredConferenceBUS;
import com.quanghuyabc9.BUS.RegisteringConferenceBUS;
import com.quanghuyabc9.DTO.Conference;
import com.quanghuyabc9.DTO.RegisteredConference;
import com.quanghuyabc9.DTO.RegisteringConference;
import com.quanghuyabc9.GUI.Guess;
import java.awt.Dimension;
import java.awt.GridBagConstraints;
import java.awt.Toolkit;
import java.util.List;
import javax.swing.JPanel;

/**
 *
 * @author quanghuyabc9
 */
public class ListUserRequesting extends javax.swing.JDialog {

    private Conference conference;
    private boolean isModified;

    public ListUserRequesting(java.awt.Frame parent, boolean modal, Conference _conference) {
        super(parent, modal);
        conference = _conference;
        isModified = false;
        initComponents();
    }

    public void setIsModified(boolean _isModified) {
        isModified = _isModified;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlTop = new javax.swing.JPanel();
        pnlAcceptAllTop = new javax.swing.JPanel();
        lblAcceptAllTop = new javax.swing.JLabel();
        pnlDenyAllTop = new javax.swing.JPanel();
        lblDenyAllTop = new javax.swing.JLabel();
        pnlCenter = new javax.swing.JPanel();
        scrCenter = new javax.swing.JScrollPane();
        pnlContainDataCenter = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("User Requesting");
        setMinimumSize(new java.awt.Dimension(285, 315));
        setResizable(false);

        pnlTop.setBackground(new java.awt.Color(243, 242, 241));
        pnlTop.setBorder(javax.swing.BorderFactory.createEmptyBorder(5, 0, 5, 0));

        pnlAcceptAllTop.setBackground(new java.awt.Color(243, 242, 241));
        pnlAcceptAllTop.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(153, 153, 153), 2, true));
        pnlAcceptAllTop.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                pnlAcceptAllTopMouseMoved(evt);
            }
        });
        pnlAcceptAllTop.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseExited(java.awt.event.MouseEvent evt) {
                pnlAcceptAllTopMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                pnlAcceptAllTopMousePressed(evt);
            }
        });
        pnlAcceptAllTop.setLayout(new java.awt.BorderLayout());

        lblAcceptAllTop.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        lblAcceptAllTop.setForeground(new java.awt.Color(153, 153, 153));
        lblAcceptAllTop.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblAcceptAllTop.setText("Accept all");
        lblAcceptAllTop.setBorder(javax.swing.BorderFactory.createEmptyBorder(3, 3, 3, 3));
        pnlAcceptAllTop.add(lblAcceptAllTop, java.awt.BorderLayout.CENTER);

        pnlDenyAllTop.setBackground(new java.awt.Color(243, 242, 241));
        pnlDenyAllTop.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(153, 153, 153), 2, true));
        pnlDenyAllTop.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                pnlDenyAllTopMouseMoved(evt);
            }
        });
        pnlDenyAllTop.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseExited(java.awt.event.MouseEvent evt) {
                pnlDenyAllTopMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                pnlDenyAllTopMousePressed(evt);
            }
        });
        pnlDenyAllTop.setLayout(new java.awt.BorderLayout());

        lblDenyAllTop.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        lblDenyAllTop.setForeground(new java.awt.Color(153, 153, 153));
        lblDenyAllTop.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblDenyAllTop.setText("Deny all");
        lblDenyAllTop.setBorder(javax.swing.BorderFactory.createEmptyBorder(3, 3, 3, 3));
        pnlDenyAllTop.add(lblDenyAllTop, java.awt.BorderLayout.CENTER);

        javax.swing.GroupLayout pnlTopLayout = new javax.swing.GroupLayout(pnlTop);
        pnlTop.setLayout(pnlTopLayout);
        pnlTopLayout.setHorizontalGroup(
            pnlTopLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlTopLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(pnlAcceptAllTop, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(pnlDenyAllTop, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pnlTopLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {pnlAcceptAllTop, pnlDenyAllTop});

        pnlTopLayout.setVerticalGroup(
            pnlTopLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlDenyAllTop, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(pnlAcceptAllTop, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pnlCenter.setBackground(new java.awt.Color(243, 242, 241));
        pnlCenter.setLayout(new java.awt.BorderLayout());

        scrCenter.setBorder(null);

        pnlContainDataCenter.setBackground(new java.awt.Color(243, 242, 241));
        pnlContainDataCenter.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 5, 0, 5));
        pnlContainDataCenter.setLayout(new java.awt.GridBagLayout());
        scrCenter.setViewportView(pnlContainDataCenter);

        pnlCenter.add(scrCenter, java.awt.BorderLayout.CENTER);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlTop, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(pnlCenter, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(pnlTop, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(pnlCenter, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void pnlAcceptAllTopMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnlAcceptAllTopMouseMoved
        // TODO add your handling code here:
        pnlAcceptAllTop.setBackground(Guess.MOUSE_MOVED_PNL_COLOR);
    }//GEN-LAST:event_pnlAcceptAllTopMouseMoved

    private void pnlAcceptAllTopMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnlAcceptAllTopMousePressed
        // TODO add your handling code here:
        List<RegisteringConference> registeringConferences = RegisteringConferenceBUS.getRegisteringConferencesOfConference(conference);
        for (int i = 0; i < registeringConferences.size(); i++) {
            RegisteredConference registeredConference = new RegisteredConference();
            registeredConference.setPerson(registeringConferences.get(i).getPerson());
            registeredConference.setConference(registeringConferences.get(i).getConference());
            RegisteredConferenceBUS.add(registeredConference);
        }
        RegisteringConferenceBUS.deleteAllRegisteringConferenceOfConference(conference.getId());
        updateUi();
        isModified = true;
    }//GEN-LAST:event_pnlAcceptAllTopMousePressed

    private void pnlAcceptAllTopMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnlAcceptAllTopMouseExited
        // TODO add your handling code here:
        pnlAcceptAllTop.setBackground(Guess.MOUSE_EXITED_PNL_COLOR);
    }//GEN-LAST:event_pnlAcceptAllTopMouseExited

    private void pnlDenyAllTopMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnlDenyAllTopMouseMoved
        // TODO add your handling code here:
        pnlDenyAllTop.setBackground(Guess.MOUSE_MOVED_PNL_COLOR);
    }//GEN-LAST:event_pnlDenyAllTopMouseMoved

    private void pnlDenyAllTopMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnlDenyAllTopMouseExited
        // TODO add your handling code here:
        pnlDenyAllTop.setBackground(Guess.MOUSE_EXITED_PNL_COLOR);
    }//GEN-LAST:event_pnlDenyAllTopMouseExited

    private void pnlDenyAllTopMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnlDenyAllTopMousePressed
        // TODO add your handling code here:
        RegisteringConferenceBUS.deleteAllRegisteringConferenceOfConference(conference.getId());
        updateUi();
        isModified = true;
    }//GEN-LAST:event_pnlDenyAllTopMousePressed

    public boolean showDialog() {
        fillData();

        final Toolkit toolkit = Toolkit.getDefaultToolkit();
        final Dimension screenSize = toolkit.getScreenSize();
        final int x = (screenSize.width - getWidth()) / 2;
        final int y = (screenSize.height - getHeight()) / 2;
        setLocation(x, y);
        setVisible(true);
        setLocationRelativeTo(null);
        return isModified;
    }

    private void fillData() {
        pnlContainDataCenter.removeAll();
        List<RegisteringConference> registeringConferences = RegisteringConferenceBUS.getRegisteringConferencesOfConference(conference);
        if (registeringConferences.isEmpty()) {
            pnlContainDataCenter.repaint();
            return;
        }
        for (int i = 0; i < registeringConferences.size(); i++) {
            UserRequestingItem01 userRequestingItem = new UserRequestingItem01(registeringConferences.get(i));
            GridBagConstraints gbc = new GridBagConstraints();
            gbc.weightx = 1;
            gbc.fill = GridBagConstraints.HORIZONTAL;
            gbc.gridwidth = GridBagConstraints.REMAINDER;
            userRequestingItem.setVisible(true);
            pnlContainDataCenter.add(userRequestingItem, gbc);
        }
        GridBagConstraints gbcAlign = new GridBagConstraints();
        gbcAlign.weightx = 1;
        gbcAlign.weighty = 1;
        pnlContainDataCenter.add(new JPanel(), gbcAlign);
        pnlContainDataCenter.revalidate();
        pnlContainDataCenter.repaint();
    }

    public void updateUi() {
        fillData();
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel lblAcceptAllTop;
    private javax.swing.JLabel lblDenyAllTop;
    private javax.swing.JPanel pnlAcceptAllTop;
    private javax.swing.JPanel pnlCenter;
    private javax.swing.JPanel pnlContainDataCenter;
    private javax.swing.JPanel pnlDenyAllTop;
    private javax.swing.JPanel pnlTop;
    private javax.swing.JScrollPane scrCenter;
    // End of variables declaration//GEN-END:variables
}
