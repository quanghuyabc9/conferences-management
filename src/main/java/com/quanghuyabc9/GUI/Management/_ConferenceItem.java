/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.quanghuyabc9.GUI.Management;

import com.quanghuyabc9.BUS.ConferenceBUS;
import com.quanghuyabc9.BUS.RegisteringConferenceBUS;
import com.quanghuyabc9.DTO.Conference;
import com.quanghuyabc9.DTO.Location;
import com.quanghuyabc9.DTO.RegisteringConference;
import com.quanghuyabc9.GUI.Confirm;
import com.quanghuyabc9.GUI.Guess;
import java.awt.Color;
import java.util.List;
import javax.swing.JFrame;
import javax.swing.SwingUtilities;

/**
 *
 * @author quanghuyabc9
 */
public class _ConferenceItem extends javax.swing.JPanel {

    private Conference conference;

    public static final Color MOUSE_MOVED_PNL_COLOR = new Color(237, 235, 233);
    public static final Color MOUSE_EXITED_PNL_COLOR = new Color(255, 255, 255);

    public _ConferenceItem(Conference _conference) {
        conference = _conference;
        initComponents();
        setData();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        lblId = new javax.swing.JLabel();
        lblName = new javax.swing.JLabel();
        lblLocation = new javax.swing.JLabel();
        lblTime = new javax.swing.JLabel();
        pnlManagement = new javax.swing.JPanel();
        pnlUserRequestingManagement = new javax.swing.JPanel();
        lblUserRequestingManagement = new javax.swing.JLabel();
        pnlEditConferenceManagement = new javax.swing.JPanel();
        lblEditConferenceManagement = new javax.swing.JLabel();
        pnlDeleteConferenceManagement = new javax.swing.JPanel();
        lblDeleteConferenceManagement = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));
        setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 25, 0, 0));
        setPreferredSize(new java.awt.Dimension(621, 50));
        setLayout(new java.awt.GridBagLayout());

        lblId.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        lblId.setForeground(new java.awt.Color(51, 51, 51));
        lblId.setText("#");
        lblId.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 10));
        lblId.setPreferredSize(new java.awt.Dimension(0, 50));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.2;
        gridBagConstraints.weighty = 1.0;
        add(lblId, gridBagConstraints);

        lblName.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        lblName.setForeground(new java.awt.Color(51, 51, 51));
        lblName.setText("Name value");
        lblName.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 10));
        lblName.setPreferredSize(new java.awt.Dimension(0, 50));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.8;
        gridBagConstraints.weighty = 1.0;
        add(lblName, gridBagConstraints);

        lblLocation.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        lblLocation.setForeground(new java.awt.Color(51, 51, 51));
        lblLocation.setText(" Location value");
        lblLocation.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 10));
        lblLocation.setPreferredSize(new java.awt.Dimension(0, 50));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.8;
        gridBagConstraints.weighty = 1.0;
        add(lblLocation, gridBagConstraints);

        lblTime.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        lblTime.setForeground(new java.awt.Color(51, 51, 51));
        lblTime.setText("Time value");
        lblTime.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 10));
        lblTime.setPreferredSize(new java.awt.Dimension(0, 50));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.8;
        gridBagConstraints.weighty = 1.0;
        add(lblTime, gridBagConstraints);

        pnlManagement.setBackground(new java.awt.Color(255, 255, 255));
        pnlManagement.setPreferredSize(new java.awt.Dimension(0, 50));
        pnlManagement.setLayout(new java.awt.GridLayout(1, 0));

        pnlUserRequestingManagement.setBackground(new java.awt.Color(255, 255, 255));
        pnlUserRequestingManagement.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                pnlUserRequestingManagementMouseMoved(evt);
            }
        });
        pnlUserRequestingManagement.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseExited(java.awt.event.MouseEvent evt) {
                pnlUserRequestingManagementMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                pnlUserRequestingManagementMousePressed(evt);
            }
        });
        pnlUserRequestingManagement.setLayout(new java.awt.BorderLayout());

        lblUserRequestingManagement.setForeground(new java.awt.Color(51, 51, 51));
        lblUserRequestingManagement.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblUserRequestingManagement.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/quanghuyabc9/images/icons8-add-user-group-man-man-24.png"))); // NOI18N
        lblUserRequestingManagement.setText("0");
        pnlUserRequestingManagement.add(lblUserRequestingManagement, java.awt.BorderLayout.CENTER);

        pnlManagement.add(pnlUserRequestingManagement);

        pnlEditConferenceManagement.setBackground(new java.awt.Color(255, 255, 255));
        pnlEditConferenceManagement.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                pnlEditConferenceManagementMouseMoved(evt);
            }
        });
        pnlEditConferenceManagement.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseExited(java.awt.event.MouseEvent evt) {
                pnlEditConferenceManagementMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                pnlEditConferenceManagementMousePressed(evt);
            }
        });
        pnlEditConferenceManagement.setLayout(new java.awt.BorderLayout());

        lblEditConferenceManagement.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblEditConferenceManagement.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/quanghuyabc9/images/icons8-edit-property-24.png"))); // NOI18N
        pnlEditConferenceManagement.add(lblEditConferenceManagement, java.awt.BorderLayout.CENTER);

        pnlManagement.add(pnlEditConferenceManagement);

        pnlDeleteConferenceManagement.setBackground(new java.awt.Color(255, 255, 255));
        pnlDeleteConferenceManagement.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                pnlDeleteConferenceManagementMouseMoved(evt);
            }
        });
        pnlDeleteConferenceManagement.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseExited(java.awt.event.MouseEvent evt) {
                pnlDeleteConferenceManagementMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                pnlDeleteConferenceManagementMousePressed(evt);
            }
        });
        pnlDeleteConferenceManagement.setLayout(new java.awt.BorderLayout());

        lblDeleteConferenceManagement.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblDeleteConferenceManagement.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/quanghuyabc9/images/icons8-delete-bin-24.png"))); // NOI18N
        pnlDeleteConferenceManagement.add(lblDeleteConferenceManagement, java.awt.BorderLayout.CENTER);

        pnlManagement.add(pnlDeleteConferenceManagement);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.5;
        gridBagConstraints.weighty = 1.0;
        add(pnlManagement, gridBagConstraints);
    }// </editor-fold>//GEN-END:initComponents

    private void pnlUserRequestingManagementMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnlUserRequestingManagementMouseMoved
        // TODO add your handling code here:
        pnlUserRequestingManagement.setBackground(MOUSE_MOVED_PNL_COLOR);
    }//GEN-LAST:event_pnlUserRequestingManagementMouseMoved

    private void pnlUserRequestingManagementMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnlUserRequestingManagementMouseExited
        // TODO add your handling code here:
        pnlUserRequestingManagement.setBackground(MOUSE_EXITED_PNL_COLOR);
    }//GEN-LAST:event_pnlUserRequestingManagementMouseExited

    private void pnlEditConferenceManagementMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnlEditConferenceManagementMouseMoved
        // TODO add your handling code here:
        pnlEditConferenceManagement.setBackground(MOUSE_MOVED_PNL_COLOR);
    }//GEN-LAST:event_pnlEditConferenceManagementMouseMoved

    private void pnlEditConferenceManagementMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnlEditConferenceManagementMouseExited
        // TODO add your handling code here:
        pnlEditConferenceManagement.setBackground(MOUSE_EXITED_PNL_COLOR);
    }//GEN-LAST:event_pnlEditConferenceManagementMouseExited

    private void pnlEditConferenceManagementMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnlEditConferenceManagementMousePressed
        // TODO add your handling code here:
        ManageConference manageConferenceDialog = new ManageConference(new JFrame(), true, ManageConference.EDIT_CONFERENCE, conference);
        boolean isSucess = manageConferenceDialog.showDiaglog();
        if (isSucess) {
            Guess root = (Guess) SwingUtilities.getWindowAncestor(this);
            root.updateAdminUi();
            root.validate();
        }
    }//GEN-LAST:event_pnlEditConferenceManagementMousePressed

    private void pnlDeleteConferenceManagementMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnlDeleteConferenceManagementMouseMoved
        // TODO add your handling code here:
        pnlDeleteConferenceManagement.setBackground(MOUSE_MOVED_PNL_COLOR);
    }//GEN-LAST:event_pnlDeleteConferenceManagementMouseMoved

    private void pnlDeleteConferenceManagementMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnlDeleteConferenceManagementMouseExited
        // TODO add your handling code here:
        pnlDeleteConferenceManagement.setBackground(MOUSE_EXITED_PNL_COLOR);
    }//GEN-LAST:event_pnlDeleteConferenceManagementMouseExited

    private void pnlDeleteConferenceManagementMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnlDeleteConferenceManagementMousePressed
        // TODO add your handling code here:
//        Confirm confirmDialog = new Confirm(new JFrame(), true);
//        boolean delete = confirmDialog.showDialog();
//        if (delete) {
//            ConferenceBUS.delete(conference);
//            Guess root = (Guess) SwingUtilities.getWindowAncestor(this);
//            root.updateAdminUi();
//        }
    }//GEN-LAST:event_pnlDeleteConferenceManagementMousePressed

    private void pnlUserRequestingManagementMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnlUserRequestingManagementMousePressed
        // TODO add your handling code here:
        ListUserRequesting listUserRequestingDialog = new ListUserRequesting(new JFrame(), true, conference);
        boolean isModified = listUserRequestingDialog.showDialog();
        if(isModified) {
            Guess root = (Guess)SwingUtilities.getWindowAncestor(this);
            root.updateAdminUi();
        }
    }//GEN-LAST:event_pnlUserRequestingManagementMousePressed

    public final void setData() {
        String timeStart = conference.getTimeStart().toString();
        String duration = conference.getDuration().toString();
        int id = conference.getId();
        String nameConference = conference.getNameConference();
        Location location = conference.getLocation();
        lblId.setText(String.valueOf(id));
        lblName.setText(nameConference);
        lblLocation.setText(location.toString());
        lblTime.setText(timeStart + " " + duration);
        List<RegisteringConference> registeringConferences = RegisteringConferenceBUS.getRegisteringConferencesOfConference(conference);
        lblUserRequestingManagement.setText(String.valueOf(registeringConferences.size()));
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel lblDeleteConferenceManagement;
    private javax.swing.JLabel lblEditConferenceManagement;
    private javax.swing.JLabel lblId;
    private javax.swing.JLabel lblLocation;
    private javax.swing.JLabel lblName;
    private javax.swing.JLabel lblTime;
    private javax.swing.JLabel lblUserRequestingManagement;
    private javax.swing.JPanel pnlDeleteConferenceManagement;
    private javax.swing.JPanel pnlEditConferenceManagement;
    private javax.swing.JPanel pnlManagement;
    private javax.swing.JPanel pnlUserRequestingManagement;
    // End of variables declaration//GEN-END:variables
}
